% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score_scale.R
\name{score_scale}
\alias{score_scale}
\title{Score scale calculates scale scores.}
\usage{
score_scale(
  data,
  filter,
  sum = FALSE,
  min_valid = 1,
  max_na = NA,
  label = NULL,
  fun = NULL,
  var_weight = NULL,
  var_recoding = "scores"
)
}
\arguments{
\item{data}{A data frame}

\item{filter}{A logical expression for any \emph{dic} attribute (e.g. \code{scale == "ITRF" & subscale == "Int"})}

\item{sum}{If \code{FALSE}, a weighted mean function is applied for building the
scores. If \code{TRUE}, a weighted sum function is applied. When argument fun is
set, \code{sum} is ignored.}

\item{min_valid}{Minimal number of valid values that is required for
calculating the mean. A value between 0 and 1 indicates a proportion of
values (e.g., 0.5 = 50 percent of values have to be valid).}

\item{max_na}{Maximum number of NAs that are allowed before returning NA. A
value between 0 and 1 indicates a proportion of values (e.g., 0.5 = 50
percent NAs are allowed).}

\item{label}{A character string with a label for the resulting score
variable. Automatically generated if label is not set.}

\item{fun}{A function for calculating the score (e.g., \code{weighted.median}).
See details.}

\item{var_weight}{Name of the \emph{dic} attribute that is applied to derive
weights. Defaults to \code{weight}.}

\item{var_recode}{Name if the \emph{dic} attribute that may contain recoding
information. Defaults to \code{scores}.}
}
\value{
A data frame
}
\description{
Score scale calculates scale scores.
}
\details{
If you provide your own function, the first argument of that
function must take the vector of values and the second argument the
weights.
}
\examples{
dat <- apply_dic(ex_scaledic_data, ex_scaledic_dic)
# apply the default weighted mean function
score_scale(dat, scale == "rel", label = "Religious beliefs")
# apply the weighted sum function
score_scale(dat, scale == "rel", label = "Religious beliefs", sum = TRUE)
# provide an external function (here the weighted median function from the spatstat package)
#score_scale(dat, scale == "rel", label = "Religious beliefs", fun = spatstat.geom::weighted.median)

}
