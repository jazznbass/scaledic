[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/build_dic_file.html","id":"building-a-dictionary-step-by-step","dir":"Articles","previous_headings":"","what":"Building a dictionary step by step","title":"Building a dictionary file","text":"start example simple dictionary file containing item labels corresponding item names (.e, corresponding variable names data frame)2. dictionary file two columns, item_name item_label: Dictionary file combine data file dic file apply_dic() function: get message dic file contain information datatype (e.g. integer, factor, character). type attribute used various scaledic functions. example data checked invalid values, missing values imputed scales scored. variable can one following types: integer numbers without decimals, float numbers decimals, character variables text, factor variables text numbers levels factor. Scaledic estimate data type given data type attribute provided dic file. Let us add type information dic file: Dictionary file item values type integer (item whole numbers) exception gender type factor (.e. nominal scale several levels). Now can add weight information dic file. weight attribute tells various scaledic functions ) whether item inverted , b) values item weighted. weight value unsigned (e.g. 1), item inverted. weight value negative sign (e.g. -1), item inverted. (absolute) value 1, item weighted calculating item scores (e.g. 1.5 give item weight 1.5). Dictionary file example, weights 1 item inverted. , join dic data file: Now add values attribute dic file. values defines valid values variable can take. Explicitly defining values makes possible automatically identify invalid values data frame (e.g. typos). values also necessary reverse score inverted item. coding values, provide possible values separated comma (e.g., 1, 2, 3, 4 integers 1 4). also possible use colon define range integers (e.g., 5:11 indicated integers starting 5 ending 11). variables type factor character may want provide text values. case, put values within quotes (e.g., 'm', 'f', 'd' indicates three valid text entries). dic file added values: Dictionary file Invalid values can replaced automatically check_values() function. data frame replaced invalid values Next, add value_labels. Value labels give longer labels values. Value labels coded form value = label semicolon separating entry. m = male; f = female; d = diverse codes three value label (quotes necessary). dic file added value_labels: Dictionary file Now lets see coding variables: Valid values integers 1 6 value label. , valid values 0, 1, 2, 3, 4 (short 0:4) poles (0 4) labels. gender type factor. valid values 'm', 'f', 'd' turned three factor levels corresponding labels. Caution: labels provided value_labels attribute automtically turned levels factor. R internally turn values ('m', 'f', 'd') integers (1, 2, 3) age can take integers 5 11 (5:11). Value labels provided. common practice code missing values specific number (rather just leaving empty entry datasheet). example dataset used , -999 used missing value. account , add missing attribute dic file containing missing number (e.g., -999). Multiple missing values separated commas (e.g. -99, -77). Dictionary file values within missing attributes automatically replaced NA joining data dic file: turn behavior, set argument replace_missing = FALSE. Default, values checked invalid entries. , either set check_values = TRUE apply check_values() function. Extract data frame replaced missing values checked values last step tutorial add information scales items belong . Therefore, add new attribute called scale dic file another attribute scale_label longer description (named attributes way predefined attributes): Dictionary file can use scale attribute select items: rename_items() function get item labels:","code":"dat_dic <- apply_dic(ex_scaledic_data, dic_file)  1: 'type' attribute missing and replaced with an estimation (12x) dat_dic <- apply_dic(ex_scaledic_data, dic_file) dat_dic <- apply_dic(ex_scaledic_data, dic_file) dat_dic <- apply_dic(ex_scaledic_data, dic_file) dat_dic <- check_values(dat_dic, report = TRUE, replace = NA)  Found the following invalid values:  'rel_2'   Row:     14     15  Value:     66   -999   'rel_3'   Row:     14  Value:   -999   'rel_4'   Row:      3  Value:   -999   'rel_5'   Row:     19  Value:   -999   'sui_2'   Row:      9     18  Value:   -999     11   'sui_3'   Row:     17  Value:     66   'sui_4'   Row:     17  Value:     11   'sui_5'   Row:     20  Value:     55 dat_dic %>% kable(caption = \"data frame with replaced invalid values\") dat_dic <- apply_dic(ex_scaledic_data, dic_file) %>% check_values(replace = NA) dat_dic$rel_1 # How often do you attend church or other religious meetings?  # Data type is integer # Valid values: 1:6 # Value labels: # 1 = Never # 2 = Once a year or less # 3 = A few times a year # 4 = A few times a month # 5 = Once a week # 6 = More than once/week  [1] 1 3 1 2 5 3 3 4 2 6 6 6 3 6 2 3 4 5 6 2 dat_dic$sui_1 # Did you feel tense in the last week?  # Data type is integer # Valid values: 0:4 # Value labels: # 0 = not at all # 4 = extremely  [1] 2 4 3 0 1 3 0 0 1 3 4 1 2 4 2 1 3 1 0 1 dat_dic$gender # gender  # Data type is factor # Value labels: # m = male # f = female # d = diverse  [1] f d d f f d f f f f m m m m d d f m m m Levels: m f d dat_dic$age # age  # Data type is integer # Valid values: 5:11   [1]  7  7  9  8  6  6 10  8  7  9  7 10  8  6  7  8  8  9  8 10 dat_dic <- apply_dic(ex_scaledic_data, dic_file)  1: Missing values replaced with NA dat_dic <- apply_dic(ex_scaledic_data, dic_file, check_values = TRUE)  1: Invalid values replaced with NA 2: Missing values replaced with NA dat_dic %>%   slice(9:20) %>%    kable(caption = \"Extract from the data frame with replaced missing values and checked values\") dat_dic <- apply_dic(ex_scaledic_data, dic_file, check_values = TRUE)  1: Invalid values replaced with NA 2: Missing values replaced with NA dat_dic %>%    select_items(scale == \"rel\") %>%    descriptives()    name valid missing mean   sd min max range median  mad 1 rel_1    20       0 3.65 1.76   1   6     5    3.0 1.48 2 rel_2    18       2 3.44 1.89   1   6     5    3.5 2.22 3 rel_3    19       1 3.37 1.54   1   5     4    4.0 1.48 4 rel_4    19       1 3.21 1.55   1   5     4    3.0 1.48 5 rel_5    19       1 2.37 1.26   1   5     4    3.0 1.48 dat_dic %>%    select_items(scale == \"rel\") %>%    rename_items() %>%   descriptives() %>%   kable()"},{"path":"/articles/scaledic.html","id":"what-is-a-dictionary-file","dir":"Articles","previous_headings":"","what":"What is a dictionary file?","title":"Introduction to scaledic","text":"conduct research based questionnaires psychometric tests (working R), typically create data.frame one column (variable) item questionnaire one row person participated. can store limited amount additional information item questionnaire within data.frame (tibble). can give variable name define variable factor appropriate levels. basically, . , least conveniently, include longer label item, name scale item belongs , information reverse coding, etc. call collection additional information items item dictionary. dictionary contains short label, longer description, scale affiliation, item.","code":""},{"path":"/articles/scaledic.html","id":"a-dictionary-file","dir":"Articles","previous_headings":"","what":"A dictionary file","title":"Introduction to scaledic","text":"dictionary file table row variable column atttribute variables. conveniently, prepare dictionary file spreadsheet program later use data sets. extract example dic-file: dictionary file can contain additional attributes like. , can add column name store relevant information (e.g. scale scale label item belongs , translation item name). predefined attributes exist specific meaning. following table shows attributes: Basic columns dictionary file","code":""},{"path":"/articles/scaledic.html","id":"apply-a-dictionary-file","dir":"Articles","previous_headings":"","what":"Apply a dictionary file","title":"Introduction to scaledic","text":"combine dataset dictionary file, variable dataset corresponds variable described dictionary completed given dictionary information. resulting dataset now ready use scaledic functions. apply_dic function takes name dataset dictionary file combines . Missing values replaced NAs: Let us get overview scales dataset:","code":"# Here we use the example dataset \"dat_itrf\" and the example dic file \"dic_itrf\" dat <- apply_dic(dat_itrf, dic_itrf) list_scales(dat, paste0(c(\"scale\", \"subscale\", \"subscale_2\"), \"_label\")) %>% kable()"},{"path":"/articles/scaledic.html","id":"clean-raw-data","dir":"Articles","previous_headings":"","what":"Clean raw data","title":"Introduction to scaledic","text":"Firstly, check invalid values dataset (e.g., typos) replace NA: Now impute missing values:","code":"dat <- check_values(dat, replace = NA) # Imputation for items of the subscale Ext dat <- impute_missing(dat, subscale == \"Ext\")  # Imputation for items of the subscale Int dat <- impute_missing(dat, subscale == \"Int\")"},{"path":"/articles/scaledic.html","id":"select-scales-for-analyszing","dir":"Articles","previous_headings":"","what":"Select scales for analyszing","title":"Introduction to scaledic","text":"Let us see descriptive statistics internalizing sub scale:","code":"dat %>%    select_items(subscale == \"Int\") %>%   descriptives(round = 1) #>         name valid missing mean  sd min max range median mad #> 1   itrf_I_1  4772       4  0.4 0.7   0   3     3      0   0 #> 2   itrf_I_2  4772       4  0.3 0.7   0   3     3      0   0 #> 3   itrf_I_4  4772       4  0.3 0.6   0   3     3      0   0 #> 4   itrf_I_5  4772       4  0.2 0.6   0   3     3      0   0 #> 5   itrf_I_6  4772       4  0.2 0.5   0   3     3      0   0 #> 6   itrf_I_7  4772       4  0.4 0.7   0   3     3      0   0 #> 7   itrf_I_8  4772       4  0.3 0.7   0   3     3      0   0 #> 8   itrf_I_9  4772       4  0.5 0.8   0   3     3      0   0 #> 9  itrf_I_10  4772       4  0.3 0.7   0   3     3      0   0 #> 10 itrf_I_11  4772       4  0.3 0.7   0   3     3      0   0 #> 11 itrf_I_12  4772       4  0.4 0.7   0   3     3      0   0 #> 12 itrf_I_13  4772       4  0.4 0.7   0   3     3      0   0 #> 13 itrf_I_14  4772       4  0.3 0.7   0   3     3      0   0 #> 14 itrf_I_15  4772       4  0.4 0.7   0   3     3      0   0 #> 15 itrf_I_16  4772       4  0.4 0.8   0   3     3      0   0 #> 16 itrf_I_17  4772       4  0.4 0.7   0   3     3      0   0 #> 17 itrf_I_19  4772       4  0.2 0.6   0   3     3      0   0 #> 18 itrf_I_23  4772       4  0.4 0.7   0   3     3      0   0 #> 19 itrf_I_24  4772       4  0.4 0.7   0   3     3      0   0"},{"path":"/articles/scaledic.html","id":"see-items-instead-of-labels","dir":"Articles","previous_headings":"","what":"See items instead of labels","title":"Introduction to scaledic","text":"convenient see original items instead short labels: analyse factor structure. use rename_item() function get convenient description. provide item analyses","code":"dat %>%    select_items(subscale == \"Int\") %>%   rename_items() %>%   descriptives(round = 1)  %>%    kable() dat %>%   select_items(scale == \"ITRF\") %>%   rename_items(pattern = \"({reverse}){subscale}_{subscale_2}: {label}\", max_chars = 70) %>%   exploratory_fa(nfactors = 4, cut = 0.4) %>% kable() scales <- ex_itrf %>% get_scales(   'APD' = subscale_2 == \"APD\",   'OPP' = subscale_2 == \"OPP\",   \"SW\" = subscale_2 == \"SW\",   \"AD\" = subscale_2 == \"AD\" ) alpha_table(dat, scales = scales) %>% kable()"},{"path":"/articles/scaledic.html","id":"build-scale-scores","dir":"Articles","previous_headings":"","what":"Build scale scores","title":"Introduction to scaledic","text":"Now build scores internalizing externalizing scales get descriptives scores","code":"dat$itrf_ext <- score_scale(dat, scale == \"ITRF\" & subscale == \"Ext\", label = \"Externalizing\") dat$itrf_int <- score_scale(dat, scale == \"ITRF\" & subscale == \"Int\", label = \"Internalizing\") dat %>%   select_scores() %>%   rename_items() %>%   descriptives(round = 1) #>            name valid missing mean  sd min max range median mad #> 1 Internalizing  4772       4  0.3 0.4   0 2.6   2.6    0.2 0.3 #> 2 Externalizing  4776       0  0.6 0.6   0 3.0   3.0    0.4 0.5"},{"path":"/articles/scaledic.html","id":"lookup-norm-values-from-a-normtable","dir":"Articles","previous_headings":"","what":"Lookup norm values from a normtable","title":"Introduction to scaledic","text":"Many scales come norm tables transform raw-scores T-scores, percentile ranks etc. lookup_norms function helps conversion. Firstly, need data frame (Excel table etc) includes raw-scores corresponding norm-scores. example table: need raw-scores scale. exist, may use score_scales function add sum scores. Therefore, set sum argument TRUE. setting max_na = 0, allow missing values scale item: default, lookup_norms looks T values: can easily changed percentile ranks, included:","code":"ex_normtable_int %>% slice(1:10) %>% kable() dat$raw_int <- score_scale(dat, subscale == \"Int\", sum = TRUE, max_na = 0) dat$raw_ext <- score_scale(dat, subscale == \"Ext\", sum = TRUE, max_na = 0) dat$T_int <- lookup_norms(dat$raw_int, normtable = ex_normtable_int) dat$T_ext <- lookup_norms(dat$raw_ext, normtable = ex_normtable_ext) dat$PR_int <- lookup_norms(dat$raw_int, normtable = ex_normtable_int, to = \"PR\") dat$PR_ext <- lookup_norms(dat$raw_ext, normtable = ex_normtable_ext, to = \"PR\") dat[1:10, c(\"T_int\", \"T_ext\", \"PR_int\", \"PR_ext\")] %>% kable()"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juergen Wilbert. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"APA style: Wilbert, J. (2021). scaledic - dictionary scales. (0.1) [English]. github. https://github.com/jazznbass/scaledic.","code":"@Misc{,   title = {scaledic - A dictionary for scales},   shorttitle = {scaledic},   publisher = {github},   author = {Jürgen Wilbert},   year = {2021},   url = {https://github.com/jazznbass/scaledic}, }"},{"path":"/index.html","id":"scaledic---a-dictionary-for-scales","dir":"","previous_headings":"","what":"Functions and data frame extension for scale based operations","title":"Functions and data frame extension for scale based operations","text":"ever thought might helpful additional information variable data frame, giving longer description, scale belongs , whether reverse coding, valid values, value labels? wouldn’t nice able check typos, impute missing values, create scale scores, switch long short labels graph, etc. just simple commands R? scaledic aims . scaledic R package extending data frames tibbles several scale-related attributes. designed implement (psychometric) scale information items data frame. includes values, labels, subscales, weights, etc. number functions help organise, extract, replace impute missing values, find typos, build scale scores etc. moment, scaledic already works task, still experimental stage may change basic syntax. documentation also poor. working . Basically scaledic loads dictionary file containing relevant information applies data frame. variable corresponding ones described dictionary gets new attribute dic contains list dictionary values variable. package contains sample data frame ITRF 4767 participants filled integrated teacher report form questionnaire. dic_ITRF corresponding dictionary file ITRF (original data collected Germany, dictionary file also German item labels).","code":""},{"path":"/reference/alpha_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with alpha values — alpha_table","title":"Table with alpha values — alpha_table","text":"Returns data.frame item analyses provided scales.","code":""},{"path":"/reference/alpha_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with alpha values — alpha_table","text":"","code":"alpha_table(   data,   scales,   labels = NULL,   round = 2,   CI = TRUE,   conf_level = 0.95,   check_key = TRUE,   keys = \"auto\",   RMSEA = FALSE,   difficulty = FALSE,   values = NULL,   fa = TRUE )"},{"path":"/reference/alpha_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with alpha values — alpha_table","text":"data data Frame scales list containing vectors variable names. list element defines one scale. Named list elements used labels. labels Label names scales (defaults named list elements 'scales'). round Rounds values given decimal position. CI TRUE confidence intervals calculated. conf_level Confidence level (e.g. 0.95 95 percent). check_key Check_key psych::alpha function. keys Optional key argument psych::alpha function. RMSEA TRUE RMSEA calculated. difficulty TRUE, difficulty item calculated. values Sets maximum minimum valid values necessary calculate item difficulty fa TRUE, one factor exploratory factor analyses calculated loadings reported.","code":""},{"path":"/reference/alpha_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table with alpha values — alpha_table","text":"data frame concise scale indices.","code":""},{"path":"/reference/alpha_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table with alpha values — alpha_table","text":"","code":"scales <- get_scales(ex_itrf,   Int = scale == \"ITRF\" & subscale == \"Int\",   Ext = scale == \"ITRF\" & subscale == \"Ext\" ) alpha_table(ex_itrf, scales = scales, difficulty = TRUE, values = list(c(0, 3)), RMSEA = TRUE) #> Note. values in brackets depict upper and lower bound of confidence intervals or [min,max] intervals. #>   Scale    n n items    Alpha CI95% Std.Alph CI95% Homogeneity Discriminations #> 1   Int 4247      19 .91 [.91, .92] .91 [.91, .92]         .36      [.49, .68] #> 2   Ext 4616      17 .93 [.93, .93] .93 [.93, .93]         .44      [.39, .74] #>   Difficulties        Means          SDs |Loadings| RMSEA #> 1   [.07, .16] [0.21, 0.48] [0.51, 0.77] [.52, .70]  .154 #> 2   [.12, .32] [0.35, 0.95] [0.72, 1.04] [.38, .78]  .196"},{"path":"/reference/apply_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dictionary — apply_dic","title":"Apply dictionary — apply_dic","text":"Joins data frame dictionary file.","code":""},{"path":"/reference/apply_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dictionary — apply_dic","text":"","code":"apply_dic(   data,   dic,   factors = TRUE,   set_label_attr = TRUE,   coerce_class = TRUE,   replace_missing = TRUE,   score_scales = TRUE,   check_values = FALSE,   impute_values = FALSE,   rename_var = NULL )"},{"path":"/reference/apply_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dictionary — apply_dic","text":"data Data frame dic data frame comprising dictionary character string filename (now Microsoft Excel file) containing dictionary. factors set TRUE, variables defined type factor dic file turned factors. set_label_attr TRUE, label attributes haven package set. labels shown Rstudio View panel. coerce_class set TRUE mismatches class dic type corrected. replace_missing TRUE, missing values dic replaced NA score_scales TRUE dic files contains score scale definitions applied check_values TRUE, performs check_values function variables data frame included dic file. impute_values TRUE score_scales TRUE, missing values automatically imputed based scale information provided dic file. rename_var character provided, corresponding column dic file used rename variables rename_var item_name.","code":""},{"path":"/reference/apply_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dictionary — apply_dic","text":"data frame dictionary information.","code":""},{"path":"/reference/apply_dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dictionary — apply_dic","text":"","code":"dat <- apply_dic(dat_itrf, dic_itrf) #>  #> 1: 'type' attribute missing and replaced with an estimation (2x) #> 2: Invalid values replaced with NA #> 3: Missing values replaced with NA #> 4: Scales scored descriptives(dat) #>         name valid missing mean   sd min  max range median  mad #> 1   itrf_I_1  4247     529 0.38 0.72   0 3.00  3.00   0.00 0.00 #> 2   itrf_I_2  4757      19 0.35 0.69   0 3.00  3.00   0.00 0.00 #> 3   itrf_I_4  4758      18 0.31 0.63   0 3.00  3.00   0.00 0.00 #> 4   itrf_I_5  4755      21 0.24 0.59   0 3.00  3.00   0.00 0.00 #> 5   itrf_I_6  4754      22 0.21 0.51   0 3.00  3.00   0.00 0.00 #> 6   itrf_I_7  4751      25 0.41 0.72   0 3.00  3.00   0.00 0.00 #> 7   itrf_I_8  4753      23 0.35 0.69   0 3.00  3.00   0.00 0.00 #> 8   itrf_I_9  4761      15 0.48 0.77   0 3.00  3.00   0.00 0.00 #> 9  itrf_I_10  4761      15 0.28 0.66   0 3.00  3.00   0.00 0.00 #> 10 itrf_I_11  4757      19 0.33 0.68   0 3.00  3.00   0.00 0.00 #> 11 itrf_I_12  4755      21 0.37 0.69   0 3.00  3.00   0.00 0.00 #> 12 itrf_I_13  4754      22 0.42 0.72   0 3.00  3.00   0.00 0.00 #> 13 itrf_I_14  4757      19 0.35 0.69   0 3.00  3.00   0.00 0.00 #> 14 itrf_I_15  4755      21 0.37 0.71   0 3.00  3.00   0.00 0.00 #> 15 itrf_I_16  4755      21 0.43 0.76   0 3.00  3.00   0.00 0.00 #> 16 itrf_I_17  4757      19 0.38 0.71   0 3.00  3.00   0.00 0.00 #> 17 itrf_I_19  4761      15 0.23 0.59   0 3.00  3.00   0.00 0.00 #> 18 itrf_I_20  4753      23 0.55 0.91   0 3.00  3.00   0.00 0.00 #> 19 itrf_I_23  4741      35 0.36 0.68   0 3.00  3.00   0.00 0.00 #> 20 itrf_I_24  4747      29 0.38 0.71   0 3.00  3.00   0.00 0.00 #> 21  itrf_E_1  4757      19 0.95 1.04   0 3.00  3.00   1.00 1.48 #> 22  itrf_E_2  4754      22 0.75 0.97   0 3.00  3.00   0.00 0.00 #> 23  itrf_E_3  4616     160 0.57 0.90   0 3.00  3.00   0.00 0.00 #> 24  itrf_E_4  4702      74 0.57 0.86   0 3.00  3.00   0.00 0.00 #> 25  itrf_E_5  4729      47 0.93 0.96   0 3.00  3.00   1.00 1.48 #> 26  itrf_E_6  4751      25 0.53 0.87   0 3.00  3.00   0.00 0.00 #> 27  itrf_E_7  4755      21 0.35 0.75   0 3.00  3.00   0.00 0.00 #> 28  itrf_E_8  4757      19 0.49 0.90   0 3.00  3.00   0.00 0.00 #> 29  itrf_E_9  4756      20 0.83 0.96   0 3.00  3.00   1.00 1.48 #> 30 itrf_E_10  4756      20 0.40 0.79   0 3.00  3.00   0.00 0.00 #> 31 itrf_E_11  4754      22 0.77 0.95   0 3.00  3.00   0.00 0.00 #> 32 itrf_E_12  4753      23 0.46 0.81   0 3.00  3.00   0.00 0.00 #> 33 itrf_E_13  4751      25 0.47 0.85   0 3.00  3.00   0.00 0.00 #> 34 itrf_E_14  4723      53 0.38 0.75   0 3.00  3.00   0.00 0.00 #> 35 itrf_E_15  4749      27 0.70 0.91   0 3.00  3.00   0.00 0.00 #> 36 itrf_E_16  4761      15 0.35 0.72   0 3.00  3.00   0.00 0.00 #> 37  itrf_int  4772       4 0.35 0.42   0 2.63  2.63   0.21 0.31 #> 38  itrf_ext  4776       0 0.59 0.60   0 3.00  3.00   0.41 0.52"},{"path":"/reference/backup_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup dictionary information — backup_dic","title":"Backup dictionary information — backup_dic","text":"Backup dictionary information","code":""},{"path":"/reference/backup_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup dictionary information — backup_dic","text":"","code":"backup_dic(data)"},{"path":"/reference/backup_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup dictionary information — backup_dic","text":"data data frame containing dic infromation.","code":""},{"path":"/reference/backup_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backup dictionary information — backup_dic","text":"list dic information. can later writen back data frame deploy_dic() function.","code":""},{"path":"/reference/build_scaledic_skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a dictionary file template — build_scaledic_skeleton","title":"Build a dictionary file template — build_scaledic_skeleton","text":"Build dictionary file template","code":""},{"path":"/reference/build_scaledic_skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a dictionary file template — build_scaledic_skeleton","text":"","code":"build_scaledic_skeleton(filename = \"dic_template.xlsx\", nrows = 0)"},{"path":"/reference/build_scaledic_skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a dictionary file template — build_scaledic_skeleton","text":"filename Character string. Default 'dic_template.xlsx' nrows Number empty rows added data frame.","code":""},{"path":"/reference/build_scaledic_skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a dictionary file template — build_scaledic_skeleton","text":"'filename' empty, writes Excel file empty template dic file. 'filename' NA, returns data frame.","code":""},{"path":"/reference/build_scaledic_skeleton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a dictionary file template — build_scaledic_skeleton","text":"","code":"build_scaledic_skeleton(NA, nrows = 3) #>   item_label weight values value_labels missing type class score_filter #> 1         NA     NA     NA           NA      NA   NA    NA           NA #> 2         NA     NA     NA           NA      NA   NA    NA           NA #> 3         NA     NA     NA           NA      NA   NA    NA           NA #>   score_function #> 1             NA #> 2             NA #> 3             NA"},{"path":"/reference/check_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Check values — check_values","title":"Check values — check_values","text":"Checks values variables valid according 'values' 'type' dictionary attributes.","code":""},{"path":"/reference/check_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check values — check_values","text":"","code":"check_values(   data,   replace = NULL,   return = TRUE,   report = FALSE,   include_missing = FALSE,   integer_as_double = TRUE,   check_type = TRUE )"},{"path":"/reference/check_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check values — check_values","text":"data data frame replace Value relaces unvalid values (e.g., NA). return TRUE, data frame returned replaced values. report TRUE, overview invalid values given. include_missing TRUE, missing values (provided 'missing' dic file) considered valid values. integer_as_double TRUE, type 'integer' coverted 'double'. check_type TRUE, check class variable conflicts 'type' defined dic information. type numeric class 'character' try convert class numeric class.","code":""},{"path":"/reference/check_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check values — check_values","text":"data frame replaced values replaces NULL.","code":""},{"path":"/reference/check_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check values — check_values","text":"","code":"check_values(ex_itrf, return = FALSE)"},{"path":"/reference/combine_data_frames.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine data frames — combine_data_frames","title":"Combine data frames — combine_data_frames","text":"Combine data frames (rows columns) keep dic information.","code":""},{"path":"/reference/combine_data_frames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine data frames — combine_data_frames","text":"","code":"combine_data_frames(...)"},{"path":"/reference/combine_data_frames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine data frames — combine_data_frames","text":"... data frames dic information","code":""},{"path":"/reference/combine_data_frames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine data frames — combine_data_frames","text":"combined data frame rows columns provided data frames.","code":""},{"path":"/reference/combine_data_frames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine data frames — combine_data_frames","text":"function useful want join several data frames contain dic information one data frame. variable entailed data frames dic information, resulting data frame keep dic information data frame first listed argument.","code":""},{"path":"/reference/dat_itrf.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset: Integrated Teacher Report Form — dat_itrf","title":"Example dataset: Integrated Teacher Report Form — dat_itrf","text":"dataset without dic information containing response teacher form data (40 items).","code":""},{"path":"/reference/dat_itrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset: Integrated Teacher Report Form — dat_itrf","text":"","code":"dat_itrf"},{"path":"/reference/dat_itrf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset: Integrated Teacher Report Form — dat_itrf","text":"data frame 4776 rows 40 variables","code":""},{"path":"/reference/deploy_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy dictionary information — deploy_dic","title":"Deploy dictionary information — deploy_dic","text":"Deploy dictionary information","code":""},{"path":"/reference/deploy_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy dictionary information — deploy_dic","text":"","code":"deploy_dic(data, dic_list)"},{"path":"/reference/deploy_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy dictionary information — deploy_dic","text":"data data frame dic_list list created backup_dic() function.","code":""},{"path":"/reference/deploy_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deploy dictionary information — deploy_dic","text":"data frame added dic information dic_list","code":""},{"path":"/reference/descriptives.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with descriptive statistics — descriptives","title":"Table with descriptive statistics — descriptives","text":"Table descriptive statistics","code":""},{"path":"/reference/descriptives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with descriptive statistics — descriptives","text":"","code":"descriptives(data, round = 2, labels = FALSE)"},{"path":"/reference/descriptives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with descriptive statistics — descriptives","text":"data data frame round Digits round function labels Deprecated. Use rename_items() instead.","code":""},{"path":"/reference/descriptives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table with descriptive statistics — descriptives","text":"data frame descriptive statistics","code":""},{"path":"/reference/descriptives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table with descriptive statistics — descriptives","text":"","code":"descriptives(ex_itrf) #>         name valid missing mean   sd min  max range median  mad #> 1   itrf_I_1  4247     529 0.38 0.72   0 3.00  3.00   0.00 0.00 #> 2   itrf_I_2  4757      19 0.35 0.69   0 3.00  3.00   0.00 0.00 #> 3   itrf_I_4  4758      18 0.31 0.63   0 3.00  3.00   0.00 0.00 #> 4   itrf_I_5  4755      21 0.24 0.59   0 3.00  3.00   0.00 0.00 #> 5   itrf_I_6  4754      22 0.21 0.51   0 3.00  3.00   0.00 0.00 #> 6   itrf_I_7  4751      25 0.41 0.72   0 3.00  3.00   0.00 0.00 #> 7   itrf_I_8  4753      23 0.35 0.69   0 3.00  3.00   0.00 0.00 #> 8   itrf_I_9  4761      15 0.48 0.77   0 3.00  3.00   0.00 0.00 #> 9  itrf_I_10  4761      15 0.28 0.66   0 3.00  3.00   0.00 0.00 #> 10 itrf_I_11  4757      19 0.33 0.68   0 3.00  3.00   0.00 0.00 #> 11 itrf_I_12  4755      21 0.37 0.69   0 3.00  3.00   0.00 0.00 #> 12 itrf_I_13  4754      22 0.42 0.72   0 3.00  3.00   0.00 0.00 #> 13 itrf_I_14  4757      19 0.35 0.69   0 3.00  3.00   0.00 0.00 #> 14 itrf_I_15  4755      21 0.37 0.71   0 3.00  3.00   0.00 0.00 #> 15 itrf_I_16  4755      21 0.43 0.76   0 3.00  3.00   0.00 0.00 #> 16 itrf_I_17  4757      19 0.38 0.71   0 3.00  3.00   0.00 0.00 #> 17 itrf_I_19  4761      15 0.23 0.59   0 3.00  3.00   0.00 0.00 #> 18 itrf_I_20  4753      23 0.55 0.91   0 3.00  3.00   0.00 0.00 #> 19 itrf_I_23  4741      35 0.36 0.68   0 3.00  3.00   0.00 0.00 #> 20 itrf_I_24  4747      29 0.38 0.71   0 3.00  3.00   0.00 0.00 #> 21  itrf_E_1  4757      19 0.95 1.04   0 3.00  3.00   1.00 1.48 #> 22  itrf_E_2  4754      22 0.75 0.97   0 3.00  3.00   0.00 0.00 #> 23  itrf_E_3  4616     160 0.57 0.90   0 3.00  3.00   0.00 0.00 #> 24  itrf_E_4  4702      74 0.57 0.86   0 3.00  3.00   0.00 0.00 #> 25  itrf_E_5  4729      47 0.93 0.96   0 3.00  3.00   1.00 1.48 #> 26  itrf_E_6  4751      25 0.53 0.87   0 3.00  3.00   0.00 0.00 #> 27  itrf_E_7  4755      21 0.35 0.75   0 3.00  3.00   0.00 0.00 #> 28  itrf_E_8  4757      19 0.49 0.90   0 3.00  3.00   0.00 0.00 #> 29  itrf_E_9  4756      20 0.83 0.96   0 3.00  3.00   1.00 1.48 #> 30 itrf_E_10  4756      20 0.40 0.79   0 3.00  3.00   0.00 0.00 #> 31 itrf_E_11  4754      22 0.77 0.95   0 3.00  3.00   0.00 0.00 #> 32 itrf_E_12  4753      23 0.46 0.81   0 3.00  3.00   0.00 0.00 #> 33 itrf_E_13  4751      25 0.47 0.85   0 3.00  3.00   0.00 0.00 #> 34 itrf_E_14  4723      53 0.38 0.75   0 3.00  3.00   0.00 0.00 #> 35 itrf_E_15  4749      27 0.70 0.91   0 3.00  3.00   0.00 0.00 #> 36 itrf_E_16  4761      15 0.35 0.72   0 3.00  3.00   0.00 0.00 #> 37  itrf_int  4772       4 0.35 0.42   0 2.63  2.63   0.21 0.31 #> 38  itrf_ext  4776       0 0.59 0.60   0 3.00  3.00   0.41 0.52"},{"path":"/reference/dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary class constructor — dic","title":"Dictionary class constructor — dic","text":"Dictionary class constructor","code":""},{"path":"/reference/dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary class constructor — dic","text":"","code":"dic(x, class = \"item\", type = \"integer\", ...)"},{"path":"/reference/dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary class constructor — dic","text":"x variable. class default \"item\". type defaults \"integer\". ... dic parameters.","code":""},{"path":"/reference/dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dictionary class constructor — dic","text":"item class dic.","code":""},{"path":"/reference/dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary class constructor — dic","text":"","code":"x <- dic(1:100, item_label = \"The label of this item\")"},{"path":"/reference/dic_ITRF.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dictionary file for the Integrated Teacher Report Form. — dic_itrf","title":"Example dictionary file for the Integrated Teacher Report Form. — dic_itrf","text":"dictionary file German version integrated Teacher Report Form (ITRF).","code":""},{"path":"/reference/dic_ITRF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dictionary file for the Integrated Teacher Report Form. — dic_itrf","text":"","code":"dic_itrf"},{"path":"/reference/dic_ITRF.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dictionary file for the Integrated Teacher Report Form. — dic_itrf","text":"data frame 39 rows 15 variables","code":""},{"path":"/reference/dic_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and get dictionary attributes — dic_attr","title":"Set and get dictionary attributes — dic_attr","text":"Set get dictionary attributes","code":""},{"path":"/reference/dic_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and get dictionary attributes — dic_attr","text":"","code":"dic_attr(x, var)  dic_attr(x, var) <- value"},{"path":"/reference/dic_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and get dictionary attributes — dic_attr","text":"x Variable var Attribute value set value","code":""},{"path":"/reference/dic_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and get dictionary attributes — dic_attr","text":"Attribute value","code":""},{"path":"/reference/dic_haven.html","id":null,"dir":"Reference","previous_headings":"","what":"Create haven labels and value labels from dic — dic_haven","title":"Create haven labels and value labels from dic — dic_haven","text":"Create haven labels value labels dic","code":""},{"path":"/reference/dic_haven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create haven labels and value labels from dic — dic_haven","text":"","code":"dic_haven(data, overwrite = TRUE)"},{"path":"/reference/dic_haven.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create haven labels and value labels from dic — dic_haven","text":"data data frame containing dic information overwrite Logical. TRUE, overwrites existing haven labels.","code":""},{"path":"/reference/dic_haven.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create haven labels and value labels from dic — dic_haven","text":"data frame haven labels value labels","code":""},{"path":"/reference/dic_haven.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create haven labels and value labels from dic — dic_haven","text":"","code":"ex_itrf_copy <- haven_dic(ex_itrf, remove_haven_class = TRUE) ex_itrf_copy <- dic_haven(ex_itrf) identical(ex_itrf, ex_itrf_copy) #> [1] TRUE"},{"path":"/reference/ex_itrf.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset: Integrated Teacher Report Form — ex_itrf","title":"Example dataset: Integrated Teacher Report Form — ex_itrf","text":"dataset including dic information containing response teacher form data (40 items).","code":""},{"path":"/reference/ex_itrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset: Integrated Teacher Report Form — ex_itrf","text":"","code":"ex_itrf"},{"path":"/reference/ex_itrf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset: Integrated Teacher Report Form — ex_itrf","text":"data frame 4776 rows 40 variables","code":""},{"path":"/reference/ex_normtable_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset with a norm table — ex_normtable_ext","title":"Example dataset with a norm table — ex_normtable_ext","text":"Example dataset norm table","code":""},{"path":"/reference/ex_normtable_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset with a norm table — ex_normtable_ext","text":"","code":"ex_normtable_ext"},{"path":"/reference/ex_normtable_ext.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset with a norm table — ex_normtable_ext","text":"data frame 52 rows 5 variables","code":""},{"path":"/reference/ex_normtable_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset with a norm table — ex_normtable_int","title":"Example dataset with a norm table — ex_normtable_int","text":"Example dataset norm table","code":""},{"path":"/reference/ex_normtable_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset with a norm table — ex_normtable_int","text":"","code":"ex_normtable_int"},{"path":"/reference/ex_normtable_int.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset with a norm table — ex_normtable_int","text":"data frame 48 rows 5 variables","code":""},{"path":"/reference/exploratory_fa.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory factor analysis based on the psych::fa function — exploratory_fa","title":"Exploratory factor analysis based on the psych::fa function — exploratory_fa","text":"Exploratory factor analysis based psych::fa function","code":""},{"path":"/reference/exploratory_fa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory factor analysis based on the psych::fa function — exploratory_fa","text":"","code":"exploratory_fa(..., factor_names = NULL, sort = TRUE, cut = 0.2, round = 2)"},{"path":"/reference/exploratory_fa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory factor analysis based on the psych::fa function — exploratory_fa","text":"... Arguments passed psych::fa function. factor_names character vector names resulting factors. provided, default names chosen. sort TRUE, loadings sorted. cut Loadings cut omitted resulting data frame. round Number digits round loadings (based base::round function)","code":""},{"path":"/reference/exploratory_fa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exploratory factor analysis based on the psych::fa function — exploratory_fa","text":"data.frame","code":""},{"path":"/reference/exploratory_fa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exploratory factor analysis based on the psych::fa function — exploratory_fa","text":"","code":"ex_itrf  |>   select_items(subscale %in% c('Int', 'Ext'))  |>   exploratory_fa(nfactors = 2) #> Loading required namespace: GPArotation #>                         MR1  MR2 #> itrf_E_13              0.82      #> itrf_E_9               0.81      #> itrf_E_11               0.8      #> itrf_E_10              0.79      #> itrf_E_8               0.79      #> itrf_E_7               0.78      #> itrf_I_20              0.73      #> itrf_E_12              0.68      #> itrf_E_16              0.67      #> itrf_E_14              0.56      #> itrf_E_6               0.53      #> itrf_E_5               0.52 0.24 #> itrf_E_3               0.51      #> itrf_E_2               0.49 0.28 #> itrf_E_4               0.48 0.26 #> itrf_E_1               0.42 0.27 #> itrf_I_4                    0.74 #> itrf_I_12                    0.7 #> itrf_I_13             -0.21 0.68 #> itrf_I_14              -0.3 0.68 #> itrf_I_5                    0.68 #> itrf_I_1                    0.66 #> itrf_I_6                    0.66 #> itrf_I_16                   0.64 #> itrf_I_9                0.2 0.62 #> itrf_I_24                   0.55 #> itrf_I_23                   0.53 #> itrf_I_7                    0.52 #> itrf_I_10                   0.51 #> itrf_I_19                   0.48 #> itrf_E_15                   0.43 #> itrf_I_8                    0.43 #> itrf_I_2                    0.43 #> itrf_I_15              0.34 0.41 #> itrf_I_11              0.26 0.41 #> itrf_I_17              0.32  0.4 #> SS loadings            7.97 7.14 #> Proportion Var         0.22  0.2 #> Cumulative Var         0.22 0.42 #> Proportion Explained   0.53 0.47 #> Cumulative Proportion  0.53    1"},{"path":"/reference/extract_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a dictionary from a data file with dic information — extract_dic","title":"Extract a dictionary from a data file with dic information — extract_dic","text":"Extract dictionary data file dic information","code":""},{"path":"/reference/extract_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a dictionary from a data file with dic information — extract_dic","text":"","code":"extract_dic(data)"},{"path":"/reference/extract_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a dictionary from a data file with dic information — extract_dic","text":"data data frame dic information.","code":""},{"path":"/reference/extract_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a dictionary from a data file with dic information — extract_dic","text":"data frame dictionary format.","code":""},{"path":"/reference/extract_dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a dictionary from a data file with dic information — extract_dic","text":"","code":"extract_dic(ex_itrf) #>    item_name #> 1   itrf_I_1 #> 2   itrf_I_2 #> 3   itrf_I_4 #> 4   itrf_I_5 #> 5   itrf_I_6 #> 6   itrf_I_7 #> 7   itrf_I_8 #> 8   itrf_I_9 #> 9  itrf_I_10 #> 10 itrf_I_11 #> 11 itrf_I_12 #> 12 itrf_I_13 #> 13 itrf_I_14 #> 14 itrf_I_15 #> 15 itrf_I_16 #> 16 itrf_I_17 #> 17 itrf_I_19 #> 18 itrf_I_20 #> 19 itrf_I_23 #> 20 itrf_I_24 #> 21  itrf_E_1 #> 22  itrf_E_2 #> 23  itrf_E_3 #> 24  itrf_E_4 #> 25  itrf_E_5 #> 26  itrf_E_6 #> 27  itrf_E_7 #> 28  itrf_E_8 #> 29  itrf_E_9 #> 30 itrf_E_10 #> 31 itrf_E_11 #> 32 itrf_E_12 #> 33 itrf_E_13 #> 34 itrf_E_14 #> 35 itrf_E_15 #> 36 itrf_E_16 #> 39  itrf_int #> 40  itrf_ext #>                                                                                              item_label #> 1                                                                        Verbringt zu viel Zeit alleine #> 2                                                          Beschwert sich über Krankheit oder Schmerzen #> 3                                                                       Vermeidet soziale Interaktionen #> 4                                                                              Spielt bevorzugt alleine #> 5                                 Geht nicht auf Kontaktversuche der Mitschülerinnen und Mitschüler ein #> 6                                                             Macht sich Sorgen über unwichtige Details #> 7                                                 Beschwert sich über Kopfschmerzen oder Bauchschmerzen #> 8                                                                        Wirkt unglücklich oder traurig #> 9                                                                           Klammert sich an Erwachsene #> 10                                                                                  Verhält sich nervös #> 11                                                                               Verhält sich ängstlich #> 12                                                               Behauptet sich nicht gegenüber anderen #> 13                                                                    Verhält sich übermäßig schüchtern #> 14                                                                            Beklagt sich oder jammert #> 15                                                              Beteiligt sich nicht an Gruppenaktionen #> 16                                                                           Macht sich selbst schlecht #> 17                                                                            Weint oder ist weinerlich #> 18                                                                                Ist schnell verärgert #> 19                                                                            Macht sich ständig Sorgen #> 20                                                             Lässt sich langsam auf neue Personen ein #> 21                                                  Stellt Unterrichtsaufgaben nicht rechtzeitig fertig #> 22                                              Beginnt mit der Aufgabenbearbeitung nicht selbstständig #> 23                                                                  Erledigt Hausaufgaben unvollständig #> 24                                                    Zeigt Unterrichtsaufgaben nicht selbstständig vor #> 25                                                               Kontrolliert seine eigene Arbeit nicht #> 26 Nimmt Materialien, die zu Hause benötigt werden, nicht mit (z.B. für die Hausaufgaben, Elternbriefe) #> 27                                                                   Streitet und zankt mit Lehrkräften #> 28                                                                            Verliert die Beherrschung #> 29                                                                                         Stört andere #> 30                                                                      Verwendet unangemessene Sprache #> 31                                                    Hat Konflikte mit Mitschülerinnen und Mitschülern #> 32                                                                                      Kommandiert rum #> 33                                                                      Macht unangebrachte Bemerkungen #> 34                                                                   Kommt unvorbereitet zum Unterricht #> 35                                                                   Beteiligt sich nicht am Unterricht #> 36                                                           Respektiert nicht die Privatsphäre anderer #> 39                                                                                   ITRF Internalizing #> 40                                                                                   ITRF Externalizing #>    values #> 1     0:3 #> 2     0:3 #> 3     0:3 #> 4     0:3 #> 5     0:3 #> 6     0:3 #> 7     0:3 #> 8     0:3 #> 9     0:3 #> 10    0:3 #> 11    0:3 #> 12    0:3 #> 13    0:3 #> 14    0:3 #> 15    0:3 #> 16    0:3 #> 17    0:3 #> 18    0:3 #> 19    0:3 #> 20    0:3 #> 21    0:3 #> 22    0:3 #> 23    0:3 #> 24    0:3 #> 25    0:3 #> 26    0:3 #> 27    0:3 #> 28    0:3 #> 29    0:3 #> 30    0:3 #> 31    0:3 #> 32    0:3 #> 33    0:3 #> 34    0:3 #> 35    0:3 #> 36    0:3 #> 39   <NA> #> 40   <NA> #>                                                                                value_labels #> 1  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 2  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 3  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 4  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 5  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 6  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 7  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 8  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 9  0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 10 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 11 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 12 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 13 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 14 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 15 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 16 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 17 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 18 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 19 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 20 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 21 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 22 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 23 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 24 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 25 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 26 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 27 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 28 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 29 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 30 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 31 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 32 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 33 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 34 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 35 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 36 0 = not problematic; 1 = slightly problematic; 2 = problematic; 3 = strongly problematic #> 39                                                                                     <NA> #> 40                                                                                     <NA> #>    missing weight scale subscale subscale_2                    scale_label #> 1      -99      1  ITRF      Int         SW Integrated teacher report form #> 2      -99      1  ITRF      Int         AD Integrated teacher report form #> 3      -99      1  ITRF      Int         SW Integrated teacher report form #> 4      -99      1  ITRF      Int         SW Integrated teacher report form #> 5      -99      1  ITRF      Int         SW Integrated teacher report form #> 6      -99      1  ITRF      Int         AD Integrated teacher report form #> 7      -99      1  ITRF      Int         AD Integrated teacher report form #> 8      -99      1  ITRF      Int         AD Integrated teacher report form #> 9      -99      1  ITRF      Int         AD Integrated teacher report form #> 10     -99      1  ITRF      Int         AD Integrated teacher report form #> 11     -99      1  ITRF      Int         AD Integrated teacher report form #> 12     -99      1  ITRF      Int         SW Integrated teacher report form #> 13     -99      1  ITRF      Int         SW Integrated teacher report form #> 14     -99      1  ITRF      Int         AD Integrated teacher report form #> 15     -99      1  ITRF      Int         SW Integrated teacher report form #> 16     -99      1  ITRF      Int         AD Integrated teacher report form #> 17     -99      1  ITRF      Int         AD Integrated teacher report form #> 18     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 19     -99      1  ITRF      Int         AD Integrated teacher report form #> 20     -99      1  ITRF      Int         SW Integrated teacher report form #> 21     -99      1  ITRF      Ext        APD Integrated teacher report form #> 22     -99      1  ITRF      Ext        APD Integrated teacher report form #> 23     -99      1  ITRF      Ext        APD Integrated teacher report form #> 24     -99      1  ITRF      Ext        APD Integrated teacher report form #> 25     -99      1  ITRF      Ext        APD Integrated teacher report form #> 26     -99      1  ITRF      Ext        APD Integrated teacher report form #> 27     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 28     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 29     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 30     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 31     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 32     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 33     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 34     -99      1  ITRF      Ext        APD Integrated teacher report form #> 35     -99      1  ITRF      Ext        APD Integrated teacher report form #> 36     -99      1  ITRF      Ext        OPP Integrated teacher report form #> 39    <NA>     NA  ITRF      Int       <NA> Integrated teacher report form #> 40    <NA>     NA  ITRF      Ext       <NA> Integrated teacher report form #>    subscale_label                      subscale_2_label    type #> 1   Internalizing                    Socially Withdrawn integer #> 2   Internalizing                     Anxious/Depressed integer #> 3   Internalizing                    Socially Withdrawn integer #> 4   Internalizing                    Socially Withdrawn integer #> 5   Internalizing                    Socially Withdrawn integer #> 6   Internalizing                     Anxious/Depressed integer #> 7   Internalizing                     Anxious/Depressed integer #> 8   Internalizing                     Anxious/Depressed integer #> 9   Internalizing                     Anxious/Depressed integer #> 10  Internalizing                     Anxious/Depressed integer #> 11  Internalizing                     Anxious/Depressed integer #> 12  Internalizing                    Socially Withdrawn integer #> 13  Internalizing                    Socially Withdrawn integer #> 14  Internalizing                     Anxious/Depressed integer #> 15  Internalizing                    Socially Withdrawn integer #> 16  Internalizing                     Anxious/Depressed integer #> 17  Internalizing                     Anxious/Depressed integer #> 18  Externalizing               Oppositional/Disruptive integer #> 19  Internalizing                     Anxious/Depressed integer #> 20  Internalizing                    Socially Withdrawn integer #> 21  Externalizing Academic Productivity/Disorganization integer #> 22  Externalizing Academic Productivity/Disorganization integer #> 23  Externalizing Academic Productivity/Disorganization integer #> 24  Externalizing Academic Productivity/Disorganization integer #> 25  Externalizing Academic Productivity/Disorganization integer #> 26  Externalizing Academic Productivity/Disorganization integer #> 27  Externalizing               Oppositional/Disruptive integer #> 28  Externalizing               Oppositional/Disruptive integer #> 29  Externalizing               Oppositional/Disruptive integer #> 30  Externalizing               Oppositional/Disruptive integer #> 31  Externalizing               Oppositional/Disruptive integer #> 32  Externalizing               Oppositional/Disruptive integer #> 33  Externalizing               Oppositional/Disruptive integer #> 34  Externalizing Academic Productivity/Disorganization integer #> 35  Externalizing Academic Productivity/Disorganization integer #> 36  Externalizing               Oppositional/Disruptive integer #> 39  Internalizing                                  <NA> integer #> 40  Externalizing                                  <NA> integer #>                               source class                        score_filter #> 1  Volpe et al. et al. (unpublished)  item                                <NA> #> 2  Volpe et al. et al. (unpublished)  item                                <NA> #> 3  Volpe et al. et al. (unpublished)  item                                <NA> #> 4  Volpe et al. et al. (unpublished)  item                                <NA> #> 5  Volpe et al. et al. (unpublished)  item                                <NA> #> 6  Volpe et al. et al. (unpublished)  item                                <NA> #> 7  Volpe et al. et al. (unpublished)  item                                <NA> #> 8  Volpe et al. et al. (unpublished)  item                                <NA> #> 9  Volpe et al. et al. (unpublished)  item                                <NA> #> 10 Volpe et al. et al. (unpublished)  item                                <NA> #> 11 Volpe et al. et al. (unpublished)  item                                <NA> #> 12 Volpe et al. et al. (unpublished)  item                                <NA> #> 13 Volpe et al. et al. (unpublished)  item                                <NA> #> 14 Volpe et al. et al. (unpublished)  item                                <NA> #> 15 Volpe et al. et al. (unpublished)  item                                <NA> #> 16 Volpe et al. et al. (unpublished)  item                                <NA> #> 17 Volpe et al. et al. (unpublished)  item                                <NA> #> 18 Volpe et al. et al. (unpublished)  item                                <NA> #> 19 Volpe et al. et al. (unpublished)  item                                <NA> #> 20 Volpe et al. et al. (unpublished)  item                                <NA> #> 21 Volpe et al. et al. (unpublished)  item                                <NA> #> 22 Volpe et al. et al. (unpublished)  item                                <NA> #> 23 Volpe et al. et al. (unpublished)  item                                <NA> #> 24 Volpe et al. et al. (unpublished)  item                                <NA> #> 25 Volpe et al. et al. (unpublished)  item                                <NA> #> 26 Volpe et al. et al. (unpublished)  item                                <NA> #> 27 Volpe et al. et al. (unpublished)  item                                <NA> #> 28 Volpe et al. et al. (unpublished)  item                                <NA> #> 29 Volpe et al. et al. (unpublished)  item                                <NA> #> 30 Volpe et al. et al. (unpublished)  item                                <NA> #> 31 Volpe et al. et al. (unpublished)  item                                <NA> #> 32 Volpe et al. et al. (unpublished)  item                                <NA> #> 33 Volpe et al. et al. (unpublished)  item                                <NA> #> 34 Volpe et al. et al. (unpublished)  item                                <NA> #> 35 Volpe et al. et al. (unpublished)  item                                <NA> #> 36 Volpe et al. et al. (unpublished)  item                                <NA> #> 39                              <NA> scale scale == \"ITRF\" & subscale == \"Int\" #> 40                              <NA> scale scale == \"ITRF\" & subscale == \"Ext\" #>    score_function index         note #> 1            <NA>     1         <NA> #> 2            <NA>     2         <NA> #> 3            <NA>     4         <NA> #> 4            <NA>     5         <NA> #> 5            <NA>     6         <NA> #> 6            <NA>     7         <NA> #> 7            <NA>     8         <NA> #> 8            <NA>     9         <NA> #> 9            <NA>    10         <NA> #> 10           <NA>    11         <NA> #> 11           <NA>    12         <NA> #> 12           <NA>    13         <NA> #> 13           <NA>    14         <NA> #> 14           <NA>    15         <NA> #> 15           <NA>    16         <NA> #> 16           <NA>    17         <NA> #> 17           <NA>    19         <NA> #> 18           <NA>    17         <NA> #> 19           <NA>    23         <NA> #> 20           <NA>    24         <NA> #> 21           <NA>     1         <NA> #> 22           <NA>     2         <NA> #> 23           <NA>     3         <NA> #> 24           <NA>     4         <NA> #> 25           <NA>     5         <NA> #> 26           <NA>     6         <NA> #> 27           <NA>     7         <NA> #> 28           <NA>     8         <NA> #> 29           <NA>     9         <NA> #> 30           <NA>    10         <NA> #> 31           <NA>    11         <NA> #> 32           <NA>    12         <NA> #> 33           <NA>    13         <NA> #> 34           <NA>    14         <NA> #> 35           <NA>    15 Item doubled #> 36           <NA>    16         <NA> #> 39           mean    NA         <NA> #> 40           mean    NA         <NA>"},{"path":"/reference/factor_by_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Turns a dic variable into a factor based on the value labels — factor_by_label","title":"Turns a dic variable into a factor based on the value labels — factor_by_label","text":"Turns dic variable factor based value labels","code":""},{"path":"/reference/factor_by_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turns a dic variable into a factor based on the value labels — factor_by_label","text":"","code":"factor_by_label(x)"},{"path":"/reference/factor_by_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turns a dic variable into a factor based on the value labels — factor_by_label","text":"x vector dic information.","code":""},{"path":"/reference/factor_by_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turns a dic variable into a factor based on the value labels — factor_by_label","text":"factor","code":""},{"path":"/reference/factor_by_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turns a dic variable into a factor based on the value labels — factor_by_label","text":"","code":"dat_dic <- apply_dic(ex_scaledic_data, ex_scaledic_dic) #>  #> 1: Missing values replaced with NA # Proportions of responses dat_dic$rel_2 |> factor_by_label() |> table() |> prop.table() #> Error in factor(x, labels = labels): invalid 'labels'; length 6 should be 1 or 7 # A cross table table(factor_by_label(dat_dic$rel_1), dat_dic$gender) #>                       #>                       m f d #>   Never               0 1 1 #>   Once a year or less 1 2 1 #>   A few times a year  1 1 3 #>   A few times a month 0 2 0 #>   Once a week         1 1 0 #>   More than once/week 4 1 0"},{"path":"/reference/get_dic_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a dictionary attribute of one or more variables. — get_dic_attribute","title":"Get a dictionary attribute of one or more variables. — get_dic_attribute","text":"Get dictionary attribute one variables.","code":""},{"path":"/reference/get_dic_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a dictionary attribute of one or more variables. — get_dic_attribute","text":"","code":"get_dic_attribute(data, attribute, duplicates = TRUE)"},{"path":"/reference/get_dic_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a dictionary attribute of one or more variables. — get_dic_attribute","text":"data data frame dic information attribute Name label attribute duplicates FALSE, duplicated attributes removed returned vector.","code":""},{"path":"/reference/get_dic_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a dictionary attribute of one or more variables. — get_dic_attribute","text":"Vector attributes. attribute present, NA returned.","code":""},{"path":"/reference/get_dic_attribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a dictionary attribute of one or more variables. — get_dic_attribute","text":"","code":"select_items(ex_itrf, subscale == \"Int\") |> get_dic_attribute(\"item_label\") #>  [1] \"Verbringt zu viel Zeit alleine\"                                        #>  [2] \"Beschwert sich über Krankheit oder Schmerzen\"                          #>  [3] \"Vermeidet soziale Interaktionen\"                                       #>  [4] \"Spielt bevorzugt alleine\"                                              #>  [5] \"Geht nicht auf Kontaktversuche der Mitschülerinnen und Mitschüler ein\" #>  [6] \"Macht sich Sorgen über unwichtige Details\"                             #>  [7] \"Beschwert sich über Kopfschmerzen oder Bauchschmerzen\"                 #>  [8] \"Wirkt unglücklich oder traurig\"                                        #>  [9] \"Klammert sich an Erwachsene\"                                           #> [10] \"Verhält sich nervös\"                                                   #> [11] \"Verhält sich ängstlich\"                                                #> [12] \"Behauptet sich nicht gegenüber anderen\"                                #> [13] \"Verhält sich übermäßig schüchtern\"                                     #> [14] \"Beklagt sich oder jammert\"                                             #> [15] \"Beteiligt sich nicht an Gruppenaktionen\"                               #> [16] \"Macht sich selbst schlecht\"                                            #> [17] \"Weint oder ist weinerlich\"                                             #> [18] \"Macht sich ständig Sorgen\"                                             #> [19] \"Lässt sich langsam auf neue Personen ein\""},{"path":"/reference/get_index.html","id":null,"dir":"Reference","previous_headings":"","what":"(Deprecated) Get index — get_index","title":"(Deprecated) Get index — get_index","text":"(Deprecated) Get index","code":""},{"path":"/reference/get_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Deprecated) Get index — get_index","text":"","code":"get_index(   data,   filter = NULL,   scale = NULL,   subscale = NULL,   subscale_2 = NULL,   names = TRUE,   class = NULL )"},{"path":"/reference/get_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Deprecated) Get index — get_index","text":"data data frame filter logical expression dic attribute (e.g. scale == \"ITRF\" & subscale == \"Int\") scale, subscale, subscale_2 deprecated names names TRUE, vector variable names returned. class deprecated","code":""},{"path":"/reference/get_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Deprecated) Get index — get_index","text":"vector indices adhering given attribute criteria.","code":""},{"path":"/reference/get_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get label of a scale — get_label","title":"Get label of a scale — get_label","text":"Get label scale","code":""},{"path":"/reference/get_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get label of a scale — get_label","text":"","code":"get_label(data, scale, label)"},{"path":"/reference/get_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get label of a scale — get_label","text":"data data frame dic information scale scale definition (e.g. scale = subscale == \"Int\"). label Name label attribute","code":""},{"path":"/reference/get_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get label of a scale — get_label","text":"Labels given scale","code":""},{"path":"/reference/get_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts a list of item names based on dic information — get_scales","title":"Extracts a list of item names based on dic information — get_scales","text":"Extracts list item names based dic information","code":""},{"path":"/reference/get_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts a list of item names based on dic information — get_scales","text":"","code":"get_scales(data, ...)"},{"path":"/reference/get_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts a list of item names based on dic information — get_scales","text":"data data.frame dic information. ... logical expression defining selection definition name defining dic attribute automatic scale definition.","code":""},{"path":"/reference/get_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts a list of item names based on dic information — get_scales","text":"(named) list character vectors item names.","code":""},{"path":"/reference/get_scales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts a list of item names based on dic information — get_scales","text":"function basically wrapper around select_items(data = data, filter = ..., names_only = TRUE) function. takes multiple filter expressions single data frame returns item names. mostly helpful functions take multiple scale definitions like alpha_table(). provide name instead logical expression, name must dic attribute. list scales created based values attribute.","code":""},{"path":"/reference/get_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts a list of item names based on dic information — get_scales","text":"","code":"## define individual scales get_scales(ex_itrf,   'APD' = subscale_2 == \"APD\",   'OPP' = subscale_2 == \"OPP\",   \"SW\" = subscale_2 == \"SW\",   'AD' = subscale_2 == \"AD\" ) #> $APD #> [1] \"itrf_E_1\"  \"itrf_E_2\"  \"itrf_E_3\"  \"itrf_E_4\"  \"itrf_E_5\"  \"itrf_E_6\"  #> [7] \"itrf_E_14\" \"itrf_E_15\" #>  #> $OPP #> [1] \"itrf_I_20\" \"itrf_E_7\"  \"itrf_E_8\"  \"itrf_E_9\"  \"itrf_E_10\" \"itrf_E_11\" #> [7] \"itrf_E_12\" \"itrf_E_13\" \"itrf_E_16\" #>  #> $SW #> [1] \"itrf_I_1\"  \"itrf_I_4\"  \"itrf_I_5\"  \"itrf_I_6\"  \"itrf_I_13\" \"itrf_I_14\" #> [7] \"itrf_I_16\" \"itrf_I_24\" #>  #> $AD #>  [1] \"itrf_I_2\"  \"itrf_I_7\"  \"itrf_I_8\"  \"itrf_I_9\"  \"itrf_I_10\" \"itrf_I_11\" #>  [7] \"itrf_I_12\" \"itrf_I_15\" \"itrf_I_17\" \"itrf_I_19\" \"itrf_I_23\" #>   ## generate scale list based on all instances of an attribute get_scales(ex_itrf, subscale_2) #> $SW #> [1] \"itrf_I_1\"  \"itrf_I_4\"  \"itrf_I_5\"  \"itrf_I_6\"  \"itrf_I_13\" \"itrf_I_14\" #> [7] \"itrf_I_16\" \"itrf_I_24\" #>  #> $AD #>  [1] \"itrf_I_2\"  \"itrf_I_7\"  \"itrf_I_8\"  \"itrf_I_9\"  \"itrf_I_10\" \"itrf_I_11\" #>  [7] \"itrf_I_12\" \"itrf_I_15\" \"itrf_I_17\" \"itrf_I_19\" \"itrf_I_23\" #>  #> $OPP #> [1] \"itrf_I_20\" \"itrf_E_7\"  \"itrf_E_8\"  \"itrf_E_9\"  \"itrf_E_10\" \"itrf_E_11\" #> [7] \"itrf_E_12\" \"itrf_E_13\" \"itrf_E_16\" #>  #> $APD #> [1] \"itrf_E_1\"  \"itrf_E_2\"  \"itrf_E_3\"  \"itrf_E_4\"  \"itrf_E_5\"  \"itrf_E_6\"  #> [7] \"itrf_E_14\" \"itrf_E_15\" #>"},{"path":"/reference/haven_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"haven labels to dic files — haven_dic","title":"haven labels to dic files — haven_dic","text":"haven labels dic files","code":""},{"path":"/reference/haven_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"haven labels to dic files — haven_dic","text":"","code":"haven_dic(data, remove_haven_class = FALSE)"},{"path":"/reference/haven_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"haven labels to dic files — haven_dic","text":"data data frame containing variables haven labels remove_haven_class TRUE, haven labels removed.","code":""},{"path":"/reference/haven_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"haven labels to dic files — haven_dic","text":"data frame dic information","code":""},{"path":"/reference/impute_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing values — impute_missing","title":"Impute missing values — impute_missing","text":"Impute missing values","code":""},{"path":"/reference/impute_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing values — impute_missing","text":"","code":"impute_missing(data, filter = NULL, force_to_scale = TRUE)"},{"path":"/reference/impute_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing values — impute_missing","text":"data data frame filter logical expression dic attribute (e.g. scale == \"ITRF\" & subscale == \"Int\") force_to_scale TRUE, imputed values rounded forced scale. , value scale's minimum maximum set scale's minimum maximum.","code":""},{"path":"/reference/impute_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute missing values — impute_missing","text":"data frame imputed data.","code":""},{"path":"/reference/lavaan_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a model definition that can be applied to lavaan::cfa for a confirmatory factor analysis — lavaan_model","title":"Extract a model definition that can be applied to lavaan::cfa for a confirmatory factor analysis — lavaan_model","text":"Extract model definition can applied lavaan::cfa confirmatory factor analysis","code":""},{"path":"/reference/lavaan_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a model definition that can be applied to lavaan::cfa for a confirmatory factor analysis — lavaan_model","text":"","code":"lavaan_model(scales, adds = \"\", orthogonal = FALSE)"},{"path":"/reference/lavaan_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a model definition that can be applied to lavaan::cfa for a confirmatory factor analysis — lavaan_model","text":"scales list scale information adds Additional model definitions orthogonal TRUE, covariance parameters set orthogonal latent factors.","code":""},{"path":"/reference/lavaan_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a model definition that can be applied to lavaan::cfa for a confirmatory factor analysis — lavaan_model","text":"character string lavaan model definition","code":""},{"path":"/reference/list_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"List scales — list_scales","title":"List scales — list_scales","text":"List scales","code":""},{"path":"/reference/list_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List scales — list_scales","text":"","code":"list_scales(   data,   levels = c(\"scale\", \"subscale\", \"subscale_2\"),   n_items = FALSE,   char_na = \"\" )"},{"path":"/reference/list_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List scales — list_scales","text":"data target data frame levels Character vector names dic attributes used extract scale information. n_items TRUE, number items scale shown char_na Character NAs.","code":""},{"path":"/reference/list_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List scales — list_scales","text":"data.frame scales different levels","code":""},{"path":"/reference/lookup_norms.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up norm table values — lookup_norms","title":"Look up norm table values — lookup_norms","text":"Transforms raw values norm values based norm table.","code":""},{"path":"/reference/lookup_norms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up norm table values — lookup_norms","text":"","code":"lookup_norms(   rawscores,   group = NULL,   normtable,   from = \"raw\",   to = \"T\",   group_label = names(group) )"},{"path":"/reference/lookup_norms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up norm table values — lookup_norms","text":"rawscores vector raw scores. group vector group affiliations list vectors multiple group categorizations. normtable excel file name data frame containing norm table. Label raw score variable file. Label norm score variable file. group_label Label group variable file list group labels multiple group categorizations.","code":""},{"path":"/reference/lookup_norms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up norm table values — lookup_norms","text":"vector norm values.","code":""},{"path":"/reference/lookup_norms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up norm table values — lookup_norms","text":"","code":"normtable <- data.frame(   age = rep(c(6, 8, 6, 8), each = 11),   gender = rep(c(\"m\", \"w\"), each = 22),   raw =  rep(0:10, 4),   T = rep(c(40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60,             37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57), 2) + rep(c(0,5), each = 22) ) rawscores <- c(5,5,3,1) group_age <- c(\"6\", \"8\", \"6\", \"8\") group_gender <- c(\"m\", \"m\", \"w\", \"w\")  lookup_norms(rawscores, group = list(age = group_age, gender = group_gender), normtable) #> [1] 50 47 51 44  ## When group values are not specified exactly, raw scores can be ambiguous: lookup_norms(rawscores, group = list(gender = group_gender), normtable = normtable) #> Warning: 1: Multiple values found for raw 5 and group m (50, 47). NA returned. #> 2: Multiple values found for raw 5 and group m (50, 47). NA returned. #> 3: Multiple values found for raw 3 and group w (51, 48). NA returned. #> 4: Multiple values found for raw 1 and group w (47, 44). NA returned. #> [1] NA NA NA NA  lookup_norms(rawscores, normtable = normtable) #> Warning: 1: Multiple values found for raw 5 (50, 47, 55, 52). NA returned. #> 2: Multiple values found for raw 5 (50, 47, 55, 52). NA returned. #> 3: Multiple values found for raw 3 (46, 43, 51, 48). NA returned. #> 4: Multiple values found for raw 1 (42, 39, 47, 44). NA returned. #> [1] NA NA NA NA"},{"path":"/reference/names2item.html","id":null,"dir":"Reference","previous_headings":"","what":"(Deprecated) Rename long to short — names2item","title":"(Deprecated) Rename long to short — names2item","text":"Set names items long labels vice versa.","code":""},{"path":"/reference/names2item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Deprecated) Rename long to short — names2item","text":"","code":"names2item(   data,   chars = NULL,   prefix = \"\",   char_sep = \"_\",   char_weight = c(\"(-)\", \"(+)\"),   char_prefix_end = \": \" )  names2label(data)"},{"path":"/reference/names2item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Deprecated) Rename long to short — names2item","text":"data data frame chars NULL, first n chars og long label applied. prefix character string vector character strings defining prefix. May include \"scale\", \"subscale\", \"subscale2\", \"index\", \"reverse\", \"weight\", \"najme\". char_sep Character separator prefix information. char_weight Character vector length two signs negative positive weights. char_prefix_end Character separator prefix item.","code":""},{"path":"/reference/names2item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Deprecated) Rename long to short — names2item","text":"renamed data frame","code":""},{"path":"/reference/names2item.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Deprecated) Rename long to short — names2item","text":"names2item renames long label. names2label renames short label.","code":""},{"path":"/reference/new_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary class low level constructor — new_dic","title":"Dictionary class low level constructor — new_dic","text":"Dictionary class low level constructor","code":""},{"path":"/reference/new_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary class low level constructor — new_dic","text":"","code":"new_dic(   x,   item_name = NULL,   item_label = NULL,   values = NULL,   value_labels = NULL,   missing = NULL,   weight = 1,   type = NULL,   class = \"item\",   ...,   .list = NULL,   .coerce_class = TRUE,   .message_attr = FALSE )"},{"path":"/reference/new_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary class low level constructor — new_dic","text":"x variable item_name Character item_label Character values Numeric character vector values. vector can named missing Numeric character vector values weight numeric type defaults \"integer\" class default \"item\" ... dic arguments (e.g. `source = \"James (1891)\") .list alternative way provide class arguments list (overwrites previous arguments) .coerce_class Logical. TRUE, tries coerce classes 'x' class match type argument .message_attr Logical. internal use value_lables Character form value = label; value2 = label2","code":""},{"path":"/reference/new_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dictionary class low level constructor — new_dic","text":"item class dic.","code":""},{"path":"/reference/new_dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary class low level constructor — new_dic","text":"","code":"x <- new_dic(1:100, item_label = \"The label of this item\")"},{"path":"/reference/print.dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Print dic infos — print.dic","title":"Print dic infos — print.dic","text":"Print dic infos","code":""},{"path":"/reference/print.dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print dic infos — print.dic","text":"","code":"# S3 method for dic print(x, ..., prefix = \"# \")"},{"path":"/reference/print.dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print dic infos — print.dic","text":"x variable dic infos ... parameters print function","code":""},{"path":"/reference/print.dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print dic infos — print.dic","text":"Dic infos x","code":""},{"path":"/reference/remove_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove dictionary class and information from a data.frame or a vector — remove_dic","title":"Remove dictionary class and information from a data.frame or a vector — remove_dic","text":"Remove dictionary class information data.frame vector","code":""},{"path":"/reference/remove_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove dictionary class and information from a data.frame or a vector — remove_dic","text":"","code":"remove_dic(data, remove_attributes = FALSE)"},{"path":"/reference/remove_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove dictionary class and information from a data.frame or a vector — remove_dic","text":"data vector data.frame (object inherits data.frame) remove_attributes TRUE, dictionary attributes removed.","code":""},{"path":"/reference/remove_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove dictionary class and information from a data.frame or a vector — remove_dic","text":"object inheriting class \"dic\".","code":""},{"path":"/reference/remove_dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove dictionary class and information from a data.frame or a vector — remove_dic","text":"","code":"dat <- remove_dic(ex_itrf) class(ex_itrf$itrf_I_1) #> [1] \"dic\"     \"numeric\" class(dat$itrf_I_1) #> [1] \"numeric\""},{"path":"/reference/rename_by_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename variables based on a list — rename_by_list","title":"Rename variables based on a list — rename_by_list","text":"Rename variables based list","code":""},{"path":"/reference/rename_by_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename variables based on a list — rename_by_list","text":"","code":"rename_by_list(data, file = NULL, to_from = NULL, to = NULL, from = NULL)"},{"path":"/reference/rename_by_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename variables based on a list — rename_by_list","text":"data data frame variables renamed file filename Excel file containing least two columns (variables) renaming. data frame two columns. to_from filename data.frame provided, named character names target  source variable names (e.g., c(\"\" = \"\")). filename provided, to_from must vector named variable names c(\"to1\" = \"from1\", \"to2\" = \"from2\")). filename data.frame provided, name column target variable names. filename provided, must vector target variable names. filename data.frame provided, name column source variable names. filename provided, must vector source variable names.","code":""},{"path":"/reference/rename_by_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename variables based on a list — rename_by_list","text":"data frame","code":""},{"path":"/reference/rename_by_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename variables based on a list — rename_by_list","text":"","code":"dat <- data.frame(A = NA, B = NA, C = NA, D = NA) rename_by_list(dat, to = c(\"albert\", \"bea\"), from = c(\"A\", \"B\")) #> 2 variables renamed #>   albert bea  C  D #> 1     NA  NA NA NA rename_by_list(dat, to_from = c(\"carl\" = \"C\", \"daniel\" = \"D\")) #> 2 variables renamed #>    A  B carl daniel #> 1 NA NA   NA     NA dic <- data.frame(old = c(\"A\", \"B\"), new = c(\"albert\", \"bea\")) rename_by_list(dat, dic, to_from = c(\"new\" = \"old\")) #> 2 variables renamed #>   albert bea  C  D #> 1     NA  NA NA NA rename_by_list(dat, dic, to = \"new\", from = \"old\") #> 2 variables renamed #>   albert bea  C  D #> 1     NA  NA NA NA if (FALSE) { rename_by_list(dat, \"rename_list,xlsx\", to_from = c(\"new\" = \"old\")) rename_by_list(dat, \"rename_list,xlsx\", to = \"new\", from = \"old\") }"},{"path":"/reference/rename_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename items — rename_items","title":"Rename items — rename_items","text":"Rename items based dic information.","code":""},{"path":"/reference/rename_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename items — rename_items","text":"","code":"rename_items(   data,   pattern = \"{item_label}\",   max_chars = NULL,   chars = max_chars )"},{"path":"/reference/rename_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename items — rename_items","text":"data data frame pattern character string syntax glue function (see glue()). max_chars, chars NULL, first n chars resulting label applied.","code":""},{"path":"/reference/rename_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename items — rename_items","text":"renamed data frame","code":""},{"path":"/reference/rename_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename items — rename_items","text":"","code":"ex_itrf  |>   rename_items(pattern = \"{reverse}{name}: {label}\")  |>   names() #>  [1] \"+itrf_I_1: Verbringt zu viel Zeit alleine\"                                                                       #>  [2] \"+itrf_I_2: Beschwert sich über Krankheit oder Schmerzen\"                                                         #>  [3] \"+itrf_I_4: Vermeidet soziale Interaktionen\"                                                                      #>  [4] \"+itrf_I_5: Spielt bevorzugt alleine\"                                                                             #>  [5] \"+itrf_I_6: Geht nicht auf Kontaktversuche der Mitschülerinnen und Mitschüler ein\"                                #>  [6] \"+itrf_I_7: Macht sich Sorgen über unwichtige Details\"                                                            #>  [7] \"+itrf_I_8: Beschwert sich über Kopfschmerzen oder Bauchschmerzen\"                                                #>  [8] \"+itrf_I_9: Wirkt unglücklich oder traurig\"                                                                       #>  [9] \"+itrf_I_10: Klammert sich an Erwachsene\"                                                                         #> [10] \"+itrf_I_11: Verhält sich nervös\"                                                                                 #> [11] \"+itrf_I_12: Verhält sich ängstlich\"                                                                              #> [12] \"+itrf_I_13: Behauptet sich nicht gegenüber anderen\"                                                              #> [13] \"+itrf_I_14: Verhält sich übermäßig schüchtern\"                                                                   #> [14] \"+itrf_I_15: Beklagt sich oder jammert\"                                                                           #> [15] \"+itrf_I_16: Beteiligt sich nicht an Gruppenaktionen\"                                                             #> [16] \"+itrf_I_17: Macht sich selbst schlecht\"                                                                          #> [17] \"+itrf_I_19: Weint oder ist weinerlich\"                                                                           #> [18] \"+itrf_I_20: Ist schnell verärgert\"                                                                               #> [19] \"+itrf_I_23: Macht sich ständig Sorgen\"                                                                           #> [20] \"+itrf_I_24: Lässt sich langsam auf neue Personen ein\"                                                            #> [21] \"+itrf_E_1: Stellt Unterrichtsaufgaben nicht rechtzeitig fertig\"                                                  #> [22] \"+itrf_E_2: Beginnt mit der Aufgabenbearbeitung nicht selbstständig\"                                              #> [23] \"+itrf_E_3: Erledigt Hausaufgaben unvollständig\"                                                                  #> [24] \"+itrf_E_4: Zeigt Unterrichtsaufgaben nicht selbstständig vor\"                                                    #> [25] \"+itrf_E_5: Kontrolliert seine eigene Arbeit nicht\"                                                               #> [26] \"+itrf_E_6: Nimmt Materialien, die zu Hause benötigt werden, nicht mit (z.B. für die Hausaufgaben, Elternbriefe)\" #> [27] \"+itrf_E_7: Streitet und zankt mit Lehrkräften\"                                                                   #> [28] \"+itrf_E_8: Verliert die Beherrschung\"                                                                            #> [29] \"+itrf_E_9: Stört andere\"                                                                                         #> [30] \"+itrf_E_10: Verwendet unangemessene Sprache\"                                                                     #> [31] \"+itrf_E_11: Hat Konflikte mit Mitschülerinnen und Mitschülern\"                                                   #> [32] \"+itrf_E_12: Kommandiert rum\"                                                                                     #> [33] \"+itrf_E_13: Macht unangebrachte Bemerkungen\"                                                                     #> [34] \"+itrf_E_14: Kommt unvorbereitet zum Unterricht\"                                                                  #> [35] \"+itrf_E_15: Beteiligt sich nicht am Unterricht\"                                                                  #> [36] \"+itrf_E_16: Respektiert nicht die Privatsphäre anderer\"                                                          #> [37] \"ITRF Internalizing: ITRF Internalizing\"                                                                          #> [38] \"ITRF Externalizing: ITRF Externalizing\""},{"path":"/reference/rename_items_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename items (depracted version) — rename_items_deprecated","title":"Rename items (depracted version) — rename_items_deprecated","text":"Rename items based dic information.","code":""},{"path":"/reference/rename_items_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename items (depracted version) — rename_items_deprecated","text":"","code":"rename_items_deprecated(   data,   pattern = \"item_label\",   chars = NULL,   char_sep = \"_\",   char_weight = c(\"(-)\", \"(+)\"),   char_prefix_label = \": \" )"},{"path":"/reference/rename_items_deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename items (depracted version) — rename_items_deprecated","text":"data data frame pattern character string vector character strings defining prefix. May include name dic attribute (e.g.\"item_label\", \"scale\", \"subscale\", \"subscale_2\") shortcuts: \"reverse\", \"label\", \"name\"). chars NULL, first n chars og long label applied. char_sep Character separator prefix information. char_weight Character vector length two signs negative positive weights. char_prefix_label deprecated","code":""},{"path":"/reference/rename_items_deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename items (depracted version) — rename_items_deprecated","text":"renamed data frame","code":""},{"path":"/reference/rename_items_deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename items (depracted version) — rename_items_deprecated","text":"","code":"ex_itrf  |>   rename_items(pattern = c(\"reverse\", \"label\")) |>   names() #> Warning: The pattern definition is deprecated. Please use glue::glue style syntax to defnine pattern. E.g. '{name}: {label}' #>  [1] \"(+): Verbringt zu viel Zeit alleine\"                                                                       #>  [2] \"(+): Beschwert sich über Krankheit oder Schmerzen\"                                                         #>  [3] \"(+): Vermeidet soziale Interaktionen\"                                                                      #>  [4] \"(+): Spielt bevorzugt alleine\"                                                                             #>  [5] \"(+): Geht nicht auf Kontaktversuche der Mitschülerinnen und Mitschüler ein\"                                #>  [6] \"(+): Macht sich Sorgen über unwichtige Details\"                                                            #>  [7] \"(+): Beschwert sich über Kopfschmerzen oder Bauchschmerzen\"                                                #>  [8] \"(+): Wirkt unglücklich oder traurig\"                                                                       #>  [9] \"(+): Klammert sich an Erwachsene\"                                                                          #> [10] \"(+): Verhält sich nervös\"                                                                                  #> [11] \"(+): Verhält sich ängstlich\"                                                                               #> [12] \"(+): Behauptet sich nicht gegenüber anderen\"                                                               #> [13] \"(+): Verhält sich übermäßig schüchtern\"                                                                    #> [14] \"(+): Beklagt sich oder jammert\"                                                                            #> [15] \"(+): Beteiligt sich nicht an Gruppenaktionen\"                                                              #> [16] \"(+): Macht sich selbst schlecht\"                                                                           #> [17] \"(+): Weint oder ist weinerlich\"                                                                            #> [18] \"(+): Ist schnell verärgert\"                                                                                #> [19] \"(+): Macht sich ständig Sorgen\"                                                                            #> [20] \"(+): Lässt sich langsam auf neue Personen ein\"                                                             #> [21] \"(+): Stellt Unterrichtsaufgaben nicht rechtzeitig fertig\"                                                  #> [22] \"(+): Beginnt mit der Aufgabenbearbeitung nicht selbstständig\"                                              #> [23] \"(+): Erledigt Hausaufgaben unvollständig\"                                                                  #> [24] \"(+): Zeigt Unterrichtsaufgaben nicht selbstständig vor\"                                                    #> [25] \"(+): Kontrolliert seine eigene Arbeit nicht\"                                                               #> [26] \"(+): Nimmt Materialien, die zu Hause benötigt werden, nicht mit (z.B. für die Hausaufgaben, Elternbriefe)\" #> [27] \"(+): Streitet und zankt mit Lehrkräften\"                                                                   #> [28] \"(+): Verliert die Beherrschung\"                                                                            #> [29] \"(+): Stört andere\"                                                                                         #> [30] \"(+): Verwendet unangemessene Sprache\"                                                                      #> [31] \"(+): Hat Konflikte mit Mitschülerinnen und Mitschülern\"                                                    #> [32] \"(+): Kommandiert rum\"                                                                                      #> [33] \"(+): Macht unangebrachte Bemerkungen\"                                                                      #> [34] \"(+): Kommt unvorbereitet zum Unterricht\"                                                                   #> [35] \"(+): Beteiligt sich nicht am Unterricht\"                                                                   #> [36] \"(+): Respektiert nicht die Privatsphäre anderer\"                                                           #> [37] \": ITRF Internalizing\"                                                                                      #> [38] \": ITRF Externalizing\""},{"path":"/reference/replace_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing values — replace_missing","title":"Replace Missing values — replace_missing","text":"Replace Missing values","code":""},{"path":"/reference/replace_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing values — replace_missing","text":"","code":"replace_missing(data, replace = NA, report = FALSE)"},{"path":"/reference/replace_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing values — replace_missing","text":"data data frame replace Replace value missing values report TRUE, proportion missing values printed.","code":""},{"path":"/reference/replace_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Missing values — replace_missing","text":"data frame replaced missing values.","code":""},{"path":"/reference/scaledic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale Dictionary — scaledic-package","title":"Scale Dictionary — scaledic-package","text":"collection procedures bring labels, scales, missing values etc. data frame.","code":""},{"path":"/reference/scaledic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale Dictionary — scaledic-package","text":"Juergen Wilbert [aut, cre]","code":""},{"path":"/reference/scaledic-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale Dictionary — scaledic-package","text":"","code":"# apply a dictionary file to a data frame dat <- apply_dic(dat_itrf, dic_itrf) #>  #> 1: 'type' attribute missing and replaced with an estimation (2x) #> 2: Invalid values replaced with NA #> 3: Missing values replaced with NA #> 4: Scales scored # check for typos (not allowed values) dat <- check_values(dat, replace = NA) # Single imputation (EM algorith from the Amelia package) # based on the variables of the provided scale dat <- impute_missing(dat, scale == \"ITRF\" & subscale == \"Ext\") #> -- Imputation 1 -- #>  #>   1  2  3 #>  dat <- impute_missing(dat, scale == \"ITRF\" & subscale == \"Int\") #> Warning: There are observations in the data that are completely missing.  #>          These observations will remain unimputed in the final datasets.  #> -- Imputation 1 -- #>  #>   1  2  3 #>  # Show a table with all scales and scale labels included in the data frame list_scales(dat, labels = TRUE) #> Error in list_scales(dat, labels = TRUE): unused argument (labels = TRUE) # Example with pipeline syntax. Would be much easier to use the \"describe\" function # from the psch packages instead of summarise_all here. library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union dat  |>   select_items(scale == \"ITRF\" & subscale == \"Ext\")  |>   rename_items(pattern = \"{subscale_2}:{name}\")  |>   summarise_all(mean, na.rm = TRUE)  |>   round(2)  |>   t() #>               [,1] #> OPP:itrf_I_20 0.55 #> APD:itrf_E_1  0.95 #> APD:itrf_E_2  0.76 #> APD:itrf_E_3  0.57 #> APD:itrf_E_4  0.58 #> APD:itrf_E_5  0.93 #> APD:itrf_E_6  0.53 #> OPP:itrf_E_7  0.35 #> OPP:itrf_E_8  0.49 #> OPP:itrf_E_9  0.83 #> OPP:itrf_E_10 0.40 #> OPP:itrf_E_11 0.77 #> OPP:itrf_E_12 0.46 #> OPP:itrf_E_13 0.47 #> APD:itrf_E_14 0.38 #> APD:itrf_E_15 0.70 #> OPP:itrf_E_16 0.35"},{"path":"/reference/score_from_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic scale scoring from a dic file — score_from_dic","title":"Automatic scale scoring from a dic file — score_from_dic","text":"Automatic scale scoring dic file","code":""},{"path":"/reference/score_from_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic scale scoring from a dic file — score_from_dic","text":"","code":"score_from_dic(data, dic = NULL, impute_values = FALSE)"},{"path":"/reference/score_from_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic scale scoring from a dic file — score_from_dic","text":"data data frame dic information dic dic file scoring information impute_values TRUE, missing values imputed scoring.","code":""},{"path":"/reference/score_from_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic scale scoring from a dic file — score_from_dic","text":"data frame added scale scores.","code":""},{"path":"/reference/score_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Score scale calculates scale scores. — score_scale","title":"Score scale calculates scale scores. — score_scale","text":"Score scale calculates scale scores.","code":""},{"path":"/reference/score_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score scale calculates scale scores. — score_scale","text":"","code":"score_scale(   data,   filter,   sum = FALSE,   min_valid = 1,   max_na = NA,   label = NULL,   fun = NULL,   var_weight = NULL )"},{"path":"/reference/score_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score scale calculates scale scores. — score_scale","text":"data data frame filter logical expression dic attribute (e.g. scale == \"ITRF\" & subscale == \"Int\") sum FALSE, weighted mean function applied building scores. TRUE, weighted sum function applied. argument fun set, sum ignored. min_valid Minimal number valid values required calculating mean. value 0 1 indicates proportion values (e.g., 0.5 = 50 percent values valid). max_na Maximum number NAs allowed returning NA. value 0 1 indicates proportion values (e.g., 0.5 = 50 percent NAs allowed). label character string label resulting score variable. Automatically generated label set. fun function calculating score (e.g., weighted.median). See details. var_weight Name dic attribute applied derive weights. Defaults weight.","code":""},{"path":"/reference/score_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score scale calculates scale scores. — score_scale","text":"data frame","code":""},{"path":"/reference/score_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score scale calculates scale scores. — score_scale","text":"provide function, first argument function must take vector values second argument weights.","code":""},{"path":"/reference/score_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score scale calculates scale scores. — score_scale","text":"","code":"dat <- apply_dic(ex_scaledic_data, ex_scaledic_dic) #>  #> 1: Missing values replaced with NA # apply the default weighted mean function score_scale(dat, scale == \"rel\", label = \"Religious beliefs\") #> Religious beliefs #> (weighted mean of items: scale == \"rel\")  #> # Data type is numeric #> # Valid values: From 1 to 5.4 #> # Value labels: #> # 1 = min #> # 5.4 = max #>  [1]  2.20  1.60  2.25  2.60  3.80  3.60  2.40  3.40  3.20  4.80  2.60  3.40 #> [13]  3.80 18.50  2.75  3.80  3.80  4.00  4.25  3.00 # apply the weighted sum function score_scale(dat, scale == \"rel\", label = \"Religious beliefs\", sum = TRUE) #> Religious beliefs #> (weighted sum of items: scale == \"rel\")  #> # Data type is numeric #> # Valid values: From 5 to 27 #> # Value labels: #> # 5 = min #> # 27 = max #>  [1] 11  8  9 13 19 18 12 17 16 24 13 17 19 74 11 19 19 20 17 15 # provide an external function (here the weighted median function from the spatstat package) score_scale(dat, scale == \"rel\", label = \"Religious beliefs\", fun = spatstat.geom::weighted.median) #> Religious beliefs #> (spatstat.geom::weighted.median of items: scale == \"rel\")  #> # Data type is numeric #> # Valid values: From 1 to 5 #> # Value labels: #> # 1 = min #> # 5 = max #>  [1] 1.0 1.0 1.5 1.5 3.5 3.5 2.0 3.0 1.5 4.5 1.5 2.5 4.0 1.0 2.0 3.5 2.5 3.0 4.0 #> [20] 2.5"},{"path":"/reference/select_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Select items — select_items","title":"Select items — select_items","text":"Selects data frame variables specific scale","code":""},{"path":"/reference/select_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select items — select_items","text":"","code":"select_items(data, filter = NULL, names_only = FALSE, index_only = FALSE)"},{"path":"/reference/select_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select items — select_items","text":"data data frame dic information filter logical expression dic attribute (e.g. scale == \"ITRF\" & subscale == \"Int\") names_only TRUE, variable names returned instead data frame index_only TRUE, variable indices returned instead data frame","code":""},{"path":"/reference/select_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select items — select_items","text":"data frame, vector variable names, vector indices.","code":""},{"path":"/reference/select_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"(Deprecated) Select a scale — select_scale","title":"(Deprecated) Select a scale — select_scale","text":"Selects data frame variables specific scale","code":""},{"path":"/reference/select_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Deprecated) Select a scale — select_scale","text":"","code":"select_scale(   data,   filter = NULL,   scale = NULL,   subscale = NULL,   subscale_2 = NULL )"},{"path":"/reference/select_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Deprecated) Select a scale — select_scale","text":"data data frame dic information filter logical expression dic attribute (e.g. scale == \"ITRF\" & subscale == \"Int\") scale, subscale, subscale_2 deprecated","code":""},{"path":"/reference/select_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Deprecated) Select a scale — select_scale","text":"data frame","code":""},{"path":"/reference/select_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Select scale scores — select_scores","title":"Select scale scores — select_scores","text":"Selects variables generated score_scale() data frame.","code":""},{"path":"/reference/select_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select scale scores — select_scores","text":"","code":"select_scores(data, names_only = FALSE, index_only = FALSE)"},{"path":"/reference/select_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select scale scores — select_scores","text":"data data frame names_only TRUE, variable names returned instead data frame index_only TRUE, variable indices returned instead data frame","code":""},{"path":"/reference/select_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select scale scores — select_scores","text":"data frame, vector variable names, vector indices.","code":""},{"path":"/reference/set_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Set dictionary information to variables — set_dic","title":"Set dictionary information to variables — set_dic","text":"Set dictionary information variables","code":""},{"path":"/reference/set_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set dictionary information to variables — set_dic","text":"","code":"set_dic(data, .vars = NULL, ...)"},{"path":"/reference/set_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set dictionary information to variables — set_dic","text":"data data frame vector. .vars Character vector variable names. data data frame, address variables. left NULL data data frame, variables data frame addressed. ... dic attributes form attribute = value.","code":""},{"path":"/reference/set_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set dictionary information to variables — set_dic","text":"data frame vector added dic attributes.","code":""},{"path":"/reference/set_dic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set dictionary information to variables — set_dic","text":"Standard attributes : \"item_name\", \"item_label\", \"weight\", \"type\", \"values\", \"value_labels\", \"missing\".","code":""},{"path":"/reference/set_dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set dictionary information to variables — set_dic","text":"","code":"hap_1 <- sample(1:5, 30, replace = TRUE) set_dic(hap_1,    item_label = \"How do you feel today?\",    scale = \"hap\",    scale_label = \"Happiness\",    values = 1:3,    value_labels = \"1 = not happy; 2 = in between; 3 = happy\" ) #> 1: Attribute 'item_name' missing and set to 'hap_1'. #> 2: Attribute 'type' missing and set to 'integer'. #> 3: Attribute 'weight' missing and set to 1. #> # How do you feel today? (Happiness)  #> # Data type is integer #> # Valid values: 1:3 #> # Value labels: #> # 1 = not happy #> # 2 = in between #> # 3 = happy #>  [1] 3 1 2 2 3 2 3 5 5 3 1 2 2 1 2 4 2 3 4 3 1 3 4 3 2 3 5 4 2 3"},{"path":"/reference/sub-.dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a dic variable — [.dic","title":"Subset a dic variable — [.dic","text":"Subset dic variable","code":""},{"path":"/reference/sub-.dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a dic variable — [.dic","text":"","code":"# S3 method for dic [(x, i = length(x), ...)"},{"path":"/reference/sub-.dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a dic variable — [.dic","text":"x  object Elements selected ... arguments passed subset function.","code":""},{"path":"/reference/sub-.dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a dic variable — [.dic","text":"dic variable","code":""},{"path":[]},{"path":"/news/index.html","id":"new-function-0-3-0","dir":"Changelog","previous_headings":"","what":"New function","title":"scaledic 0.3.0","text":"new_dic(): Constructor dic objects. Mainly used apply_dic function. factor_by_label(): turns dic object factor based value_labels.","code":"> dat_dic <- apply_dic(ex_scaledic_data, ex_scaledic_dic) > table(factor_by_label(dat_dic$rel_1), dat_dic$gender)                                             m f d   Never               0 1 1   Once a year or less 1 2 1   A few times a year  1 1 3   A few times a month 0 2 0   Once a week         1 1 0   More than once/week 4 1 0"},{"path":[]},{"path":"/news/index.html","id":"new-functions-0-2-5","dir":"Changelog","previous_headings":"","what":"New functions","title":"scaledic 0.2.5","text":"remove_dic(): Returns object inherit “dic”. case data.frame, “dic” class removed variables. argument remove_attributes set TRUE, dic attributes removed well. lookup_norms(): Turns raw scores normscores help normtable. Added example normtables ex_itrf example. get_scales(): wrapper around select_items() extract multiple scale definitions providing logical expressions name: get_dic_attribute(). Returns list dic attributes dataframe.","code":"normtable <- data.frame(   age = rep(c(6, 8, 6, 8), each = 11),   gender = rep(c(\"m\", \"w\"), each = 22),   raw =  rep(0:10, 4),   T = rep(c(40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60,              37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57), 2) + rep(c(0,5), each = 22) )  rawscores <- c(5,5,3,1) group_age <- c(\"6\", \"8\", \"6\", \"8\") group_gender <- c(\"m\", \"m\", \"w\", \"w\")  lookup_norms(rawscores, group = list(age = group_age, gender = group_gender), normtable)  ## When group values are not specified exactly, raw scores can be ambiguous: lookup_norms(rawscores, group = list(gender = group_gender), normtable = normtable)  lookup_norms(rawscores, normtable = normtable) # providing individual logical expressions scales <- get_scales(ex_itrf,   'APD' = subscale_2 == \"APD\",   'OPP' = subscale_2 == \"OPP\",   \"SW\" = subscale_2 == \"SW\",   \"AD\" = subscale_2 == \"AD\" )  # providing a name of a dic attribute scales <- get_scales(ex_itrf, subscale_2)  # are identical to:  scales <- list(   'APD' = select_items(ex_itrf, subscale_2 == \"APD\", names_only = TRUE),   'OPP' = select_items(ex_itrf, subscale_2 == \"OPP\", names_only = TRUE),   \"SW\" = select_items(ex_itrf, subscale_2 == \"SW\", names_only = TRUE),   \"AD\" = select_items(ex_itrf, subscale_2 == \"AD\", names_only = TRUE) ) ex_itrf %>%    select_items(subscale == \"Int\") %>%    get_dic_attribute(\"item_label\")"},{"path":"/news/index.html","id":"reworked-0-2-5","dir":"Changelog","previous_headings":"","what":"Reworked","title":"scaledic 0.2.5","text":"rename_items(): Much versatile syntax applying tidyvers glue function. Old functionality kept throws deprecated warning.)","code":"ex_itrf %>% select(1:5) %>%   rename_item(\"{reverse}{item_name}: {item_label}\")"},{"path":"/news/index.html","id":"scaledic-0127","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.27","title":"scaledic 0.1.27","text":"Bugs: - haven_dic(): labels length > 0 set (warning thrown). Changes: - apply_dic(): replaces linebreaks value_labels “;”","code":""},{"path":"/news/index.html","id":"scaledic-0120","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.20","title":"scaledic 0.1.20","text":"New functions: - set_label(): Sets dic information. replace set_dic. Changes: - apply_dic(): new attribute coerce_class. type dic numeric checks class variable numeric . , throws message coerces type numeric. coerce_class = FALSE, check applied coercion. - dictionary file: New variable “active”. column “active” exists, tows active != 1 dropped. - exploratory_fa(): explained variance added output","code":""},{"path":"/news/index.html","id":"scaledic-0116-2020-01-12","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.16 (2020-01-12)","title":"scaledic 0.1.16 (2020-01-12)","text":"lot bug fixes","code":""},{"path":"/news/index.html","id":"scaledic-0115-2020-12-12","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.15 (2020-12-12)","title":"scaledic 0.1.15 (2020-12-12)","text":"implemented vctrs vec_ptype2 vec_cast S3 methods dic variables better integration scaledic dyplyr","code":""},{"path":"/news/index.html","id":"scaledic-0112-2020-09-22","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.12 (2020-09-22)","title":"scaledic 0.1.12 (2020-09-22)","text":"New function: comnbine_data_frame(). combine several dataframes (rows columns) new data frame keeping dic information","code":""},{"path":"/news/index.html","id":"scaledic-0111-2020-09-22","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.11 (2020-09-22)","title":"scaledic 0.1.11 (2020-09-22)","text":"apply_dic(): impute_values scoring impute_values = TRUE. select_scale() deprecated. Instead use select_items(data, filter) get_index() deprecated. Instead use select_items(data, filter, names_only = TRUE).","code":""},{"path":"/news/index.html","id":"scaledic-0110-2020-06-26","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.10 (2020-06-26)","title":"scaledic 0.1.10 (2020-06-26)","text":"Internally reworked values value_labels attributes.","code":""},{"path":"/news/index.html","id":"scaledic-019-2020-04-16","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.9 (2020-04-16)","title":"scaledic 0.1.9 (2020-04-16)","text":"New function: score_from_dic(). Now, dictionary file can contain information building scale score (score_filter, score_function, item_label, item_name. function extracts infromation dic file returns data frame new score variable(s).","code":""},{"path":"/news/index.html","id":"scaledic-0182-2020-04-07","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.8.2 (2020-04-07)","title":"scaledic 0.1.8.2 (2020-04-07)","text":"New function: rename_by_list() renaming variables data file based provided list named strings.","code":""},{"path":"/news/index.html","id":"scaledic-0180-2020-03-25","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.8.0 (2020-03-25)","title":"scaledic 0.1.8.0 (2020-03-25)","text":"New function: descriptives() returning table descriptive statistics variables data.frame. apply_dic(): charcter string passed dic argument instead data frame, function take filename tries load file. get_dic() renamed backup_dic()","code":""},{"path":"/news/index.html","id":"scaledic-01710","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.7.10","title":"scaledic 0.1.7.10","text":"New function: alpha_table() creating item analyses mutiple scales new function: psych_fa() returning loading matrix factor analyses (based psych package)","code":""},{"path":"/news/index.html","id":"scaledic-0179","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.7.9","title":"scaledic 0.1.7.9","text":"New format specifiying selection items dic information: now uses logical operations including dic attributes. Examples: select_scale(data, scale == \"ITRF\"), get_index(data, scale == \"ITRF\" & subscale = \"Int\" & weight == 1). old specification still working deprecated. New format applicable : get_index(), select_scale(), impute_missing(), score_scales(). dicfile: sub_scale sub_scale_2 renamed subscale subscale_2. Old dic files still work variables renamed new versions import. Internal reorganization: dic attributes sub_scale sub_scale_2 renamed subscale subscale_2.","code":""},{"path":"/news/index.html","id":"scaledic-0178","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.7.8","title":"scaledic 0.1.7.8","text":"score_scale(): New argument sum. TRUE, calculated sum FALSE, calculates mean. Argument label can used set dic label resulting score variable. label left NULL, label generated automatically. apply_dic(): Agrument set_label_attr now TRUE default.","code":""},{"path":"/news/index.html","id":"scaledic-0177","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.7.7","title":"scaledic 0.1.7.7","text":"Internal rename dic attribute names. Variable name dic file now “name” default. label still possible renamed internally.","code":""},{"path":"/news/index.html","id":"scaledic-0176","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.7.6","title":"scaledic 0.1.7.6","text":"New class dic [ method. allows subset dataframes dictionaries without loosing dic information. class added fist class variable dataframe contains dic information. print() method class dic. dic_file: new type values possible: ‘numeric’ ‘double’ get_index() now takes dictionary attribute returns error message invalid dic attribute selected. dic_haven(): Adds Hmisc/haven labels dic infos haven_dic(): Adds dic infos haven labels apply_dic(): New argument set_label_attr. TRUE executes dic_haven().","code":""},{"path":"/news/index.html","id":"scaledic-017","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.7","title":"scaledic 0.1.7","text":"apply_dic(): Bug factor type solved","code":""},{"path":"/news/index.html","id":"scaledic-016","dir":"Changelog","previous_headings":"","what":"scaledic 0.1.6","title":"scaledic 0.1.6","text":"new function build_scaledic_skeleton(): Creates Excel file template dic file. list_scales(): new argument n_items displaying number items per scale. list_scales(): new argument char_na displaying NAs. dic_file: new type values possible: ‘string’, ‘character’, ‘characters’ names2labels(): new argument prefix takes character vector possible values ‘scale’, ‘subscale’, ‘subsclae2’, ‘reverse’, ‘weight’ adding respective information item. names2label(): deletet arguments short reverse. names2label(): New arguments char_weight, char_sep, char_prefix_end help specify look output. apply_dic(): new replace_missing argument replaces missing values defined dic file NAs.","code":""}]
